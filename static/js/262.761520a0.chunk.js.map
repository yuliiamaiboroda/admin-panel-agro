{"version":3,"file":"static/js/262.761520a0.chunk.js","mappings":"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","sources":["components/LoadMoreButton/LoadMoreButton.tsx","components/PageTitle/PageTitle.styled.ts","components/PageTitle/PageTitle.tsx","components/Selector/Selector.styled.ts","components/Selector/Selector.tsx","components/SortSelector/SortSelector.tsx","components/Feedback/FeedbackCard/FeedbackCard.styled.ts","components/Feedback/FeedbackCard/FeedbackCard.tsx","helpers/schemas/feedbacks/index.ts","components/FeedbackForm/FeedbackForm.tsx","components/Feedback/FeedbackGallery/FeedbackGallery.tsx","components/FeedbackFilter/FeedbackFilter.tsx","pages/FeedbackPage/FeedbackPage.tsx"],"sourcesContent":["import { Button } from 'helpers/styles';\n\ninterface IProps {\n  onClick: () => void;\n}\nexport default function LoadMoreButton({ onClick }: IProps) {\n  return (\n    <Button variant=\"primary\" type=\"button\" onClick={onClick} mx=\"auto\">\n      Показати ще\n    </Button>\n  );\n}\n","import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  height: 100px;\n  display: flex;\n  align-items: center;\n  padding: ${p => p.theme.space[6]}px ${p => p.theme.space[8]}px;\n  background: ${props => props.theme.colors.primaryGradient};\n  border-radius: ${props => props.theme.radii.pageTitle};\n\n  @media ${devices.tablet} {\n    height: 150px;\n  }\n\n  @media ${devices.desktop} {\n    height: 234px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.colors.accentText};\n  font-size: ${props => props.theme.fontSizes.xl};\n\n  @media ${devices.desktop} {\n    font-size: ${props => props.theme.fontSizes.xxl};\n  }\n`;\n","import { Title, TitleWrapper } from './PageTitle.styled';\nimport { useEffect } from 'react';\n\ninterface IProps {\n  title: string;\n}\n\nexport default function PageTitle({ title }: IProps) {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  return (\n    <TitleWrapper>\n      <Title>{title}</Title>\n    </TitleWrapper>\n  );\n}\n","import styled from 'styled-components';\nimport Select from 'react-select';\n\nexport const StyledSelector = styled(Select)<any>`\n  flex-grow: 1;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n\n  .selector__control {\n    border-width: 2px;\n    border-style: solid;\n    border-color: ${p => p.theme.colors.confirmation};\n    color: ${p => p.theme.colors.secondaryText};\n    cursor: pointer;\n    transition: box-shadow 250ms linear;\n\n    :hover {\n      border-color: ${p => p.theme.colors.confirmation};\n      box-shadow: ${p => p.theme.shadows.selector};\n    }\n  }\n\n  .selector__indicator-separator {\n    width: 2px;\n    background-color: ${p => p.theme.colors.accentBackground};\n  }\n\n  .selector__indicator {\n    color: ${p => p.theme.colors.confirmation};\n    transition: opacity 250ms linear;\n\n    :hover {\n      color: ${p => p.theme.colors.confirmation};\n      opacity: 0.7;\n    }\n  }\n\n  .selector__menu {\n    overflow: hidden;\n  }\n\n  .selector__menu-list {\n    ::-webkit-scrollbar {\n      width: 5px;\n    }\n\n    ::-webkit-scrollbar-track {\n      box-shadow: transparent;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: ${p => p.theme.colors.confirmationMedium};\n      border-radius: ${p => p.theme.radii.card};\n\n      :hover {\n        background-color: ${p => p.theme.colors.accentBackground};\n      }\n    }\n  }\n\n  .selector__option {\n    color: ${p => p.theme.colors.primaryText};\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n\n  .selector__option--is-focused {\n    color: ${p => p.theme.colors.secondaryText};\n    background: ${p => p.theme.colors.confirmationLight};\n  }\n\n  .selector__option--is-selected {\n    color: ${p => p.theme.colors.accentText};\n    background: ${p => p.theme.colors.primaryGradient};\n  }\n`;\n","import type { GroupBase, Props } from 'react-select';\nimport { StyledSelector } from './Selector.styled';\n\nexport default function Selector<\n  Option,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(props: Props<Option, IsMulti, Group>) {\n  return <StyledSelector {...props} classNamePrefix=\"selector\" />;\n}\n","import Selector from 'components/Selector';\nimport type { ISelector } from 'helpers/types';\n\nconst SORT = [\n  { value: '', label: 'Спочатку нові' },\n  { value: 'asc', label: 'Спочатку старі' },\n];\n\nexport default function SortSelector({ onChange }: ISelector) {\n  return <Selector options={SORT} onChange={onChange} defaultValue={SORT[0]} />;\n}\n","import styled from 'styled-components';\n\nexport const UnviewComponent = styled.div`\n  position: absolute;\n  top: -10%;\n  left: 95%;\n  background-color: ${props => props.theme.colors.accentBackground};\n  border-radius: ${props => props.theme.radii.circle};\n  height: ${props => props.theme.space[3]}px;\n  width: ${props => props.theme.space[3]}px;\n`;\n","import { useAppDispatch } from 'hooks';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { updateFeedbackIsFavorite, updateFeedbackViews } from 'redux/feedbacks';\nimport CardWrapperMarkup from 'components/CardWrapperMarkup';\nimport CardDetailStringMarkup from 'components/CardDetailStringMarkup';\nimport Box from 'components/Box';\nimport ItemLink from 'components/ItemLink';\nimport FavoriteButton from 'components/FavoriteButton';\nimport { UnviewComponent } from './FeedbackCard.styled';\n\nexport interface IFeedback {\n  _id: string;\n  name: string;\n  comment: string;\n  isReviewed: boolean;\n  isFavorite: boolean;\n}\nexport default function FeedbackCard({\n  _id,\n  name,\n  isReviewed,\n  comment,\n  isFavorite,\n}: IFeedback) {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleUpdateViews = () => {\n    if (!isReviewed) {\n      dispatch(updateFeedbackViews(_id));\n    }\n  };\n\n  const clickHandler = (event: React.MouseEvent) => {\n    if (\n      !(event.target instanceof HTMLAnchorElement) &&\n      !(event.target instanceof HTMLButtonElement)\n    ) {\n      handleUpdateViews();\n      navigate(`${_id}${location.search}`, { state: location });\n    }\n    return;\n  };\n\n  return (\n    <CardWrapperMarkup onClick={() => clickHandler}>\n      <Box position=\"relative\">\n        {!isReviewed && <UnviewComponent />}\n        <CardDetailStringMarkup title=\"Ім'я\" value={name} />\n        <CardDetailStringMarkup title=\"Коментар\" value={comment} />\n        <Box display=\"flex\" justifyContent=\"center\" gridGap={2}>\n          <FavoriteButton\n            isFavorite={isFavorite}\n            onClick={() => dispatch(updateFeedbackIsFavorite(_id))}\n          />\n          <ItemLink type=\"remove\" navigateTo={`${_id}/confirm`} />\n        </Box>\n      </Box>\n    </CardWrapperMarkup>\n  );\n}\n","import * as Yup from 'yup';\n\nexport const feedbackSchema = Yup.object({\n  comment: Yup.string()\n    .trim()\n    .min(2, 'Коментар занадтно короткий - має містити мінімум 10 символів.')\n    .max(2000, 'Коментар занадтно довга ий має містити максимум 63 символів.')\n    .required(\"Коментар є обов'язковим полем\"),\n  contactMail: Yup.string()\n    .min(\n      10,\n      'Контактна пошта занадто коротка - має містити мінімум 10 символів.'\n    )\n    .max(\n      63,\n      'Контактна пошта занадто довга - має містити максимум 63 символів.'\n    )\n    .email('Невалідна пошта')\n    .matches(\n      /^(\\w+([.-]?\\w+){1,})*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/,\n      'Будь ласка введіть валідну адресу контактної пошти'\n    )\n    .required(\"Контактна пошта є обов'язковим полем\"),\n  contactPhone: Yup.string()\n    .matches(\n      /^\\+380\\d{9}$/,\n      'Контактний номер повинен починатись з \"+380\" та містити 9 цифр після коду країни'\n    )\n    .required(\"Контактний телефон є обов'язковим полем\"),\n  name: Yup.string()\n    .min(4, \"Ім'я занадто коротке - має містити мінімум 4 символи\")\n    .max(30, \"Ім'я занадтно довге - має містити максимум 30 символів\")\n    .required(\"Ім'я є обов'язковим полем\"),\n  agreement: Yup.bool()\n    .oneOf([true], 'Згода має бути надана')\n    .required(\"Згода на обробку даних є обов'язковим полем\"),\n});\n","import { Field, Form, Formik, ErrorMessage } from 'formik';\nimport { feedbackSchema } from 'helpers/schemas/feedbacks';\nimport { useAppDispatch } from 'hooks';\nimport { createFeedback } from 'redux/feedbacks';\n\ninterface IFeedback {\n  name: string;\n  contactPhone: string;\n  contactMail: string;\n  comment: string;\n  agreement: boolean;\n}\n\nconst INITIAL_STATE: IFeedback = {\n  name: '',\n  comment: '',\n  contactMail: '',\n  contactPhone: '',\n  agreement: false,\n};\n\ninterface IProps {\n  onClose: () => void;\n}\n\nexport default function FeedbackForm({ onClose }: IProps) {\n  const dispatch = useAppDispatch();\n  return (\n    <>\n      <h2>Відгукнутися</h2>\n      <h3>Вкажіть свої контактні дані і ми надамо зворотній зв’язок</h3>\n      <Formik\n        initialValues={INITIAL_STATE}\n        validateOnBlur\n        validationSchema={feedbackSchema}\n        onSubmit={(values, actions) => {\n          dispatch(createFeedback(values));\n          onClose();\n        }}\n      >\n        {({ values }) => (\n          <Form\n            style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}\n          >\n            <label>\n              <Field name=\"name\" type=\"text\" id=\"name\" placeholder=\"Ім’я\" />\n              <ErrorMessage name=\"name\" />\n            </label>\n            <label>\n              <Field\n                name=\"contactPhone\"\n                type=\"tel\"\n                id=\"contactPhone\"\n                placeholder=\"Номер телефону\"\n              />\n              <ErrorMessage name=\"contactPhone\" />\n            </label>\n            <label>\n              <Field\n                name=\"contactMail\"\n                type=\"email\"\n                id=\"contactMail\"\n                placeholder=\"Email\"\n              />\n              <ErrorMessage name=\"contactMail\" />\n            </label>\n            <label>\n              <Field\n                name=\"comment\"\n                type=\"text\"\n                id=\"comment\"\n                placeholder=\"Коментар\"\n              />\n              <ErrorMessage name=\"comment\" />\n            </label>\n            <label>\n              <Field id=\"agreement\" name=\"agreement\" type=\"checkbox\" /> Я даю\n              згоду на обробку персональних даних\n              <ErrorMessage name=\"agreement\" />\n            </label>\n            <button type=\"submit\" disabled={!values.agreement}>\n              Надіслати\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import { useAppSelector } from 'hooks';\nimport { selectAllFeedbacks } from 'redux/feedbacks';\nimport FeedbackCard from '../FeedbackCard';\nimport { useState } from 'react';\nimport Modal from 'components/Modal';\nimport FeedbackForm from 'components/FeedbackForm';\nimport GalleryWrapper from 'components/GalleryWrapper';\nimport CreateButton from 'components/CreateButton';\nimport CardPlaceholder from 'components/CardPlaceholder';\n\nexport default function FeedbackGallery() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const feedbacks = useAppSelector(selectAllFeedbacks);\n\n  return (\n    <section>\n      <GalleryWrapper>\n        {feedbacks.length ? (\n          feedbacks.map(item => <FeedbackCard key={item._id} {...item} />)\n        ) : (\n          <CardPlaceholder />\n        )}\n      </GalleryWrapper>\n      <CreateButton onClick={() => setIsModalOpen(true)} />\n      {isModalOpen && (\n        <Modal onClose={() => setIsModalOpen(false)}>\n          <FeedbackForm onClose={() => setIsModalOpen(false)} />\n        </Modal>\n      )}\n    </section>\n  );\n}\n","import type { IFeedbackFilter } from 'helpers/types';\nimport SortSelector from 'components/SortSelector';\nimport Box from 'components/Box';\n\ninterface IProps {\n  filterStatus: IFeedbackFilter;\n  onSelect: React.Dispatch<React.SetStateAction<IFeedbackFilter>>;\n}\n\nexport default function FeedbackFilter({ filterStatus, onSelect }: IProps) {\n  return (\n    <Box display=\"flex\" flexDirection={['column', 'column', 'row']} gridGap={4}>\n      <label>\n        Показати улюблені\n        <input\n          type=\"checkbox\"\n          name=\"isFavorite\"\n          checked={filterStatus?.isFavorite ? true : false}\n          onChange={({ target }) =>\n            onSelect(({ isFavorite, ...rest }) => ({\n              ...rest,\n              ...(target.checked ? { isFavorite: true } : null),\n            }))\n          }\n        />\n      </label>\n      <SortSelector\n        onChange={option => {\n          onSelect(({ sort, ...rest }) => ({\n            ...rest,\n            ...(option?.value ? { sort: option.value } : null),\n          }));\n        }}\n      />\n    </Box>\n  );\n}\n","import { Suspense, useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { useAppDispatch, useAppSelector, useModal } from 'hooks';\nimport {\n  getAllFeedback,\n  loadMoreFeedbacks,\n  selectAllFeedbacks,\n  selectFeedbackPagination,\n  selectFeedbackError,\n} from 'redux/feedbacks';\nimport type { IFeedbackFilter } from 'helpers/types';\nimport FeedbackGallery from 'components/Feedback/FeedbackGallery';\nimport FeedbackFilter from 'components/FeedbackFilter';\nimport Loader from 'components/Loader';\nimport PageTitle from 'components/PageTitle';\nimport FilterWrapper from 'components/FilterWrapper';\nimport CreateButton from 'components/CreateButton';\nimport Modal from 'components/Modal/Modal';\nimport FeedbackForm from 'components/FeedbackForm';\nimport GalleryWrapper from 'components/GalleryWrapper';\nimport CardPlaceholder from 'components/CardPlaceholder';\nimport LoadMoreButton from 'components/LoadMoreButton';\n\nexport default function FeedbackPage() {\n  const { isModalOpen, openModal, closeModal } = useModal();\n  const [filterStatus, setFilterStatus] = useState<IFeedbackFilter>({});\n  const feedbacks = useAppSelector(selectAllFeedbacks);\n  const pagination = useAppSelector(selectFeedbackPagination);\n  const error = useAppSelector(selectFeedbackError);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getAllFeedback(filterStatus));\n  }, [dispatch, filterStatus]);\n\n  if (error) {\n    Notify.failure(error);\n    return (\n      <>\n        <PageTitle title=\"Отримані фідбеки\" />\n        <GalleryWrapper>\n          <CardPlaceholder title=\"It seems like:\" description={error} />\n        </GalleryWrapper>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Отримані фідбеки\" />\n      <FilterWrapper>\n        <FeedbackFilter\n          filterStatus={filterStatus}\n          onSelect={setFilterStatus}\n        />\n      </FilterWrapper>\n      <FeedbackGallery />\n      {feedbacks.length < pagination.total ? (\n        <LoadMoreButton\n          onClick={() =>\n            dispatch(\n              loadMoreFeedbacks({\n                ...filterStatus,\n                skip: pagination.skip + pagination.limit,\n              })\n            )\n          }\n        />\n      ) : null}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      <CreateButton onClick={openModal} />\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <FeedbackForm onClose={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"names":["LoadMoreButton","_ref","onClick","_jsx","Button","variant","type","mx","children","TitleWrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","props","colors","primaryGradient","radii","pageTitle","devices","Title","_templateObject2","accentText","fontSizes","xl","xxl","PageTitle","title","useEffect","document","StyledSelector","Select","m","fontWeights","medium","confirmation","secondaryText","shadows","selector","accentBackground","confirmationMedium","card","primaryText","confirmationLight","Selector","_objectSpread","classNamePrefix","SORT","value","label","SortSelector","onChange","options","defaultValue","UnviewComponent","circle","FeedbackCard","_id","name","isReviewed","comment","isFavorite","dispatch","useAppDispatch","navigate","useNavigate","location","useLocation","clickHandler","event","target","HTMLAnchorElement","HTMLButtonElement","updateFeedbackViews","concat","search","state","CardWrapperMarkup","_jsxs","Box","position","CardDetailStringMarkup","display","justifyContent","gridGap","FavoriteButton","updateFeedbackIsFavorite","ItemLink","navigateTo","feedbackSchema","Yup","trim","min","max","required","contactMail","email","matches","contactPhone","agreement","oneOf","INITIAL_STATE","FeedbackForm","onClose","_Fragment","Formik","initialValues","validateOnBlur","validationSchema","onSubmit","values","actions","createFeedback","_ref2","Form","style","flexDirection","gap","Field","id","placeholder","ErrorMessage","disabled","FeedbackGallery","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","feedbacks","useAppSelector","selectAllFeedbacks","GalleryWrapper","length","map","item","CardPlaceholder","CreateButton","Modal","FeedbackFilter","filterStatus","onSelect","checked","_ref3","rest","_objectWithoutProperties","_excluded","option","_ref4","sort","_excluded2","FeedbackPage","_useModal","useModal","openModal","closeModal","setFilterStatus","pagination","selectFeedbackPagination","error","selectFeedbackError","getAllFeedback","Notify","description","FilterWrapper","total","loadMoreFeedbacks","skip","limit","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}