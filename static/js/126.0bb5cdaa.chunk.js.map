{"version":3,"file":"static/js/126.0bb5cdaa.chunk.js","mappings":"kLAGaA,E,QAAQC,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uLAGZ,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAE,GAGrCC,EAAAA,GAAAA,Q,SCFI,SAASC,EAAeC,GAAwB,IAArBC,EAAGD,EAAHC,IAAKC,EAAGF,EAAHE,IAC7C,OAAOC,EAAAA,EAAAA,KAACZ,EAAK,CAACU,IAAKA,EAAKC,IAAKA,EAAKE,MAAM,MAAMC,OAAO,OACvD,C,4FCNaC,EAAed,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oPAIzB,SAAAa,GAAC,OAAIA,EAAEX,MAAMC,MAAM,EAAE,IAAM,SAAAU,GAAC,OAAIA,EAAEX,MAAMC,MAAM,EAAE,IAC7C,SAAAF,GAAK,OAAIA,EAAMC,MAAMY,OAAOC,eAAe,IACxC,SAAAd,GAAK,OAAIA,EAAMC,MAAMc,MAAMC,SAAS,IACvC,SAAAJ,GAAC,OAAIA,EAAEX,MAAMgB,QAAQC,IAAI,GAE9Bf,EAAAA,GAAAA,OAIAA,EAAAA,GAAAA,SAKEgB,EAAQtB,EAAAA,QAAAA,GAASuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,wFACnB,SAAAC,GAAK,OAAIA,EAAMC,MAAMY,OAAOQ,UAAU,IAClC,SAAArB,GAAK,OAAIA,EAAMC,MAAMqB,UAAUC,EAAE,GAErCpB,EAAAA,GAAAA,SACM,SAAAH,GAAK,OAAIA,EAAMC,MAAMqB,UAAUE,GAAG,I,mBCnBpC,SAASC,EAASpB,GAAqB,IAAlBqB,EAAKrB,EAALqB,MAKlC,OAJAC,EAAAA,EAAAA,YAAU,WACRC,SAASF,MAAQA,CACnB,GAAG,CAACA,KAGFlB,EAAAA,EAAAA,KAACG,EAAY,CAAAkB,UACXrB,EAAAA,EAAAA,KAACW,EAAK,CAAAU,SAAEH,KAGd,C,0PCGe,SAASI,EAAWzB,GAQvB,IAPV0B,EAAG1B,EAAH0B,IACAL,EAAKrB,EAALqB,MACAM,EAAW3B,EAAX2B,YACAC,EAAQ5B,EAAR4B,SACAC,EAAK7B,EAAL6B,MACAC,EAAW9B,EAAX8B,YACAC,EAAY/B,EAAZ+B,aAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,MAEhBC,EAAe,SAACC,GACdA,EAAMC,kBAAkBC,mBAC5BP,EAAS,GAADQ,OAAId,GAAO,CAAEe,MAAO,CAAEC,KAAMR,IAGxC,EAEA,OACE/B,EAAAA,EAAAA,KAAAwC,EAAAA,SAAA,CAAAnB,UACEoB,EAAAA,EAAAA,MAACC,EAAAA,EAAiB,CAACC,QAAS,kBAAMV,CAAY,EAACZ,SAAA,EAC7CrB,EAAAA,EAAAA,KAACJ,EAAAA,EAAe,CAACE,IAAK2B,EAAU1B,IAAKmB,KACrClB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAqB,CAACC,MAAO3B,KAC9BlB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAsB,CAAC5B,MAAM,2BAAO2B,MAAOrB,KAC5CxB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAsB,CAAC5B,MAAM,2BAAO2B,MAAOnB,KAC5C1B,EAAAA,EAAAA,KAAC8C,EAAAA,EAAsB,CAAC5B,MAAM,6CAAU2B,MAAOjB,KAC/C5B,EAAAA,EAAAA,KAAC8C,EAAAA,EAAsB,CAAC5B,MAAM,iCAAQ2B,MAAOlB,KAC7C3B,EAAAA,EAAAA,KAAC+C,EAAAA,EAAmB,CAACC,YAAaC,EAAAA,GAAAA,gBAAsB5B,UACtDoB,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACC,QAAQ,OAAOC,eAAe,SAASC,QAAS,EAAEhC,SAAA,EACrDrB,EAAAA,EAAAA,KAACsD,EAAAA,EAAQ,CAACC,KAAK,OAAOC,WAAU,GAAAnB,OAAKd,EAAG,YACxCvB,EAAAA,EAAAA,KAACsD,EAAAA,EAAQ,CAACC,KAAK,SAASC,WAAU,GAAAnB,OAAKd,EAAG,uBAMtD,C,sDC9Ce,SAASkC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,IAAeC,EAAAA,IAChCC,GAA+CC,EAAAA,EAAAA,MAAvCC,EAAWF,EAAXE,YAAaC,EAASH,EAATG,UAAWC,EAAUJ,EAAVI,WAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE1B,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAnB,SAAA,EACErB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAmB,CAACC,YAAaC,EAAAA,GAAAA,gBAAsB5B,UACtDrB,EAAAA,EAAAA,KAACoE,EAAAA,EAAY,CAACzB,QAASqB,OAEzBhE,EAAAA,EAAAA,KAACqE,EAAAA,EAAc,CAAAhD,SACZqC,EAASY,OACRZ,EAASa,KAAI,SAAA1E,GAAA,IAAG0B,EAAG1B,EAAH0B,IAAQiD,GAAIC,EAAAA,EAAAA,GAAA5E,EAAA6E,GAAA,OAC1B1E,EAAAA,EAAAA,KAACsB,GAAWqD,EAAAA,EAAAA,GAAA,CAAWpD,IAAKA,GAASiD,GAAnBjD,EAA2B,KAG/CvB,EAAAA,EAAAA,KAAC4E,EAAAA,EAAe,OAGpB5E,EAAAA,EAAAA,KAAC6E,EAAAA,EAAK,CAACd,YAAaA,EAAae,QAASb,EAAW5C,UACnDrB,EAAAA,EAAAA,KAAC+E,EAAAA,EAAW,CACVC,SAAU,SAAAC,GACRf,GAASgB,EAAAA,EAAAA,IAAcD,IACvBhB,GACF,EACAkB,SAAU,kBAAMlB,GAAY,QAKtC,C,cC/Be,SAASmB,IACtB,IAAMlB,GAAWC,EAAAA,EAAAA,MACXkB,GAAQ1B,EAAAA,EAAAA,IAAe2B,EAAAA,IAU7B,OARAnE,EAAAA,EAAAA,YAAU,WACR+C,GAASqB,EAAAA,EAAAA,MACX,GAAG,CAACrB,IAEAmB,GACFG,EAAAA,OAAAA,QAAeH,IAIf5C,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAnB,SAAA,EACErB,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAACC,MAAM,iGACjBlB,EAAAA,EAAAA,KAACyD,EAAe,KAChBzD,EAAAA,EAAAA,KAACyF,EAAAA,SAAQ,CAACC,UAAU1F,EAAAA,EAAAA,KAAC2F,EAAAA,EAAM,IAAItE,UAC7BrB,EAAAA,EAAAA,KAAC4F,EAAAA,GAAM,QAIf,C","sources":["components/CardImageMarkup/CardImageMarkup.styled.ts","components/CardImageMarkup/CardImageMarkup.tsx","components/PageTitle/PageTitle.styled.ts","components/PageTitle/PageTitle.tsx","components/ServiceCard/ServiceCard.tsx","components/ServicesGallery/ServicesGallery.tsx","pages/ServicesPage/ServicesPage.tsx"],"sourcesContent":["import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 284px;\n  height: 172px;\n  margin-bottom: ${props => props.theme.space[2]}px;\n  object-fit: cover; //TODO  cover or contain?\n  \n  @media ${devices.tablet} { \n    width: 366px;\n    height: 222px;\n  }\n`;\n","import { Image } from './CardImageMarkup.styled';\n\ninterface IProps {\n  src: string;\n  alt: string;\n}\n\nexport default function CardImageMarkup({ src, alt }: IProps) {\n  return <Image src={src} alt={alt} width=\"348\" height=\"222\" />;\n}\n","import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  height: 100px;\n  display: flex;\n  align-items: center;\n  padding: ${p => p.theme.space[6]}px ${p => p.theme.space[8]}px;\n  background: ${props => props.theme.colors.primaryGradient};\n  border-radius: ${props => props.theme.radii.pageTitle};\n  box-shadow: ${p => p.theme.shadows.card};\n\n  @media ${devices.tablet} {\n    height: 150px;\n  }\n\n  @media ${devices.desktop} {\n    height: 234px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.colors.accentText};\n  font-size: ${props => props.theme.fontSizes.xl};\n\n  @media ${devices.desktop} {\n    font-size: ${props => props.theme.fontSizes.xxl};\n  }\n`;\n","import { Title, TitleWrapper } from './PageTitle.styled';\nimport { useEffect } from 'react';\n\ninterface IProps {\n  title: string;\n}\n\nexport default function PageTitle({ title }: IProps) {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  return (\n    <TitleWrapper>\n      <Title>{title}</Title>\n    </TitleWrapper>\n  );\n}\n","import { Roles } from 'helpers/constants';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport RestrictedComponent from 'components/RestrictedComponent';\nimport CardWrapperMarkup from 'components/CardWrapperMarkup';\nimport CardImageMarkup from 'components/CardImageMarkup';\nimport CardTitleStringMarkup from 'components/CardTitleStringMarkup';\nimport CardDetailStringMarkup from 'components/CardDetailStringMarkup';\nimport ItemLink from 'components/ItemLink';\nimport Box from 'components/Box';\n\ninterface IProps {\n  _id: string;\n  title: string;\n  description: string;\n  imageURL: string;\n  price: string;\n  contactMail: string;\n  contactPhone: string;\n}\n\nexport default function ServiceCard({\n  _id,\n  title,\n  description,\n  imageURL,\n  price,\n  contactMail,\n  contactPhone,\n}: IProps) {\n  const navigate = useNavigate();\n  const routeLocation = useLocation();\n\n  const clickHandler = (event: React.MouseEvent) => {\n    if (!(event.target instanceof HTMLAnchorElement)) {\n      navigate(`${_id}`, { state: { from: routeLocation } });\n    }\n    return;\n  };\n\n  return (\n    <>\n      <CardWrapperMarkup onClick={() => clickHandler}>\n        <CardImageMarkup src={imageURL} alt={title} />\n        <CardTitleStringMarkup value={title} />\n        <CardDetailStringMarkup title=\"Опис\" value={description} />\n        <CardDetailStringMarkup title=\"Ціна\" value={price} />\n        <CardDetailStringMarkup title=\"Телефон\" value={contactPhone} />\n        <CardDetailStringMarkup title=\"Пошта\" value={contactMail} />\n        <RestrictedComponent accessRight={Roles.servicesManager}>\n          <Box display=\"flex\" justifyContent=\"center\" gridGap={2}>\n            <ItemLink type=\"edit\" navigateTo={`${_id}/form`} />\n            <ItemLink type=\"remove\" navigateTo={`${_id}/confirm`} />\n          </Box>\n        </RestrictedComponent>\n      </CardWrapperMarkup>\n    </>\n  );\n}\n","import { useAppSelector, useModal, useAppDispatch } from 'hooks';\nimport { createService, selectServices } from 'redux/services';\nimport Modal from 'components/Modal';\nimport ServiceCard from 'components/ServiceCard';\nimport ServiceForm from 'components/ServiceForm';\nimport { Roles } from 'helpers/constants';\nimport RestrictedComponent from 'components/RestrictedComponent';\nimport GalleryWrapper from 'components/GalleryWrapper';\nimport CreateButton from 'components/CreateButton';\nimport CardPlaceholder from 'components/CardPlaceholder';\n\nexport default function ServicesGallery() {\n  const services = useAppSelector(selectServices);\n  const { isModalOpen, openModal, closeModal } = useModal();\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <RestrictedComponent accessRight={Roles.servicesManager}>\n        <CreateButton onClick={openModal} />\n      </RestrictedComponent>\n      <GalleryWrapper>\n        {services.length ? (\n          services.map(({ _id, ...rest }) => (\n            <ServiceCard key={_id} _id={_id} {...rest} />\n          ))\n        ) : (\n          <CardPlaceholder />\n        )}\n      </GalleryWrapper>\n      <Modal isModalOpen={isModalOpen} onClose={closeModal}>\n        <ServiceForm\n          onSubmit={serviceData => {\n            dispatch(createService(serviceData));\n            closeModal();\n          }}\n          onCancel={() => closeModal()}\n        />\n      </Modal>\n    </>\n  );\n}\n","import { useEffect, Suspense } from 'react';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { getAllServices, selectError } from 'redux/services';\nimport { Outlet } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nimport PageTitle from 'components/PageTitle';\nimport ServicesGallery from 'components/ServicesGallery';\nimport Loader from 'components/Loader';\n\nexport default function ServicesPage() {\n  const dispatch = useAppDispatch();\n  const error = useAppSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getAllServices());\n  }, [dispatch]);\n\n  if (error) {\n    Notify.failure(error);\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Послуги компанії\" />\n      <ServicesGallery />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["Image","styled","_templateObject","_taggedTemplateLiteral","props","theme","space","devices","CardImageMarkup","_ref","src","alt","_jsx","width","height","TitleWrapper","p","colors","primaryGradient","radii","pageTitle","shadows","card","Title","_templateObject2","accentText","fontSizes","xl","xxl","PageTitle","title","useEffect","document","children","ServiceCard","_id","description","imageURL","price","contactMail","contactPhone","navigate","useNavigate","routeLocation","useLocation","clickHandler","event","target","HTMLAnchorElement","concat","state","from","_Fragment","_jsxs","CardWrapperMarkup","onClick","CardTitleStringMarkup","value","CardDetailStringMarkup","RestrictedComponent","accessRight","Roles","Box","display","justifyContent","gridGap","ItemLink","type","navigateTo","ServicesGallery","services","useAppSelector","selectServices","_useModal","useModal","isModalOpen","openModal","closeModal","dispatch","useAppDispatch","CreateButton","GalleryWrapper","length","map","rest","_objectWithoutProperties","_excluded","_objectSpread","CardPlaceholder","Modal","onClose","ServiceForm","onSubmit","serviceData","createService","onCancel","ServicesPage","error","selectError","getAllServices","Notify","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}