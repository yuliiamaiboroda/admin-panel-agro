{"version":3,"file":"static/js/377.b28769ca.chunk.js","mappings":"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","sources":["components/ResetPasswordButton/ResetPasswordButton.tsx","helpers/schemas/auth/login.schema.ts","components/LoginForm/LoginForm.styled.ts","components/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.styled.ts","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import { useAppDispatch } from 'hooks';\nimport { restorePasswordViaEmail } from 'redux/users';\nimport { MdUpdate } from 'react-icons/md';\nimport { Button } from 'helpers/styles';\n\ninterface IProps {\n  email: string;\n}\n\nexport default function ResetPasswordButton({ email }: IProps) {\n  const dispatch = useAppDispatch();\n\n  const handleClick = () => {\n    dispatch(restorePasswordViaEmail(email));\n  };\n  return (\n    <Button type=\"button\" onClick={handleClick} variant=\"content\">\n      <MdUpdate size={24} /> Забули пароль?\n    </Button>\n  );\n}\n","import * as Yup from 'yup';\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(\n      10,\n      'Електронна пошта занадто коротка - має містити мінімум 10 символів.'\n    )\n    .max(\n      63,\n      'Електронна пошта занадто довга - має містити максимум 63 символів.'\n    )\n    .email('Невалідна пошта')\n    .matches(\n      /^(\\w+([.-]?\\w+){1,})*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/,\n      'Будь ласка введіть валідну адресу електронної пошти'\n    )\n    .required(\"Електронна пошта є обов'язковим полем\"),\n  password: Yup.string()\n    .min(7, 'Пароль занадто короткий - має містити мінімум 7 символів.')\n    .max(32, 'Пароль занадтно довгий - має містити максимум 32 символи.')\n    .matches(\n      /^\\d*(?=.*[a-z])(?=.*[A-Z])\\S+\\D*\\d*$/,\n      'Пароль має містити лише: великі літери, маленькі літери та цифри'\n    )\n    .required(\"Пароль є обов'язковим полем\"),\n});\n\nexport default loginSchema;\n","import styled from 'styled-components';\nimport { devices } from 'helpers/constants';\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: ${props => props.theme.fontSizes.l};\n  color: ${props => props.theme.colors.secondaryText};\n\n  @media ${devices.tablet} {\n    font-size: ${props => props.theme.fontSizes.xl};\n  }\n`;\n","import { useState } from 'react';\nimport { useAppDispatch } from 'hooks';\nimport { loginUser } from 'redux/user';\nimport { Formik, Form } from 'formik';\nimport loginSchema from 'helpers/schemas/auth/login.schema';\nimport { RxEyeClosed, RxEyeOpen } from 'react-icons/rx';\nimport companyLogo from 'asserts/company-logo.svg';\nimport Box from 'components/Box';\nimport { Button } from 'helpers/styles';\nimport { Title } from './LoginForm.styled';\nimport FormField from 'components/FormField';\nimport ResetPasswordButton from 'components/ResetPasswordButton';\n\ninterface LoginFormValues {\n  email: string;\n  password: string;\n}\n\nconst FORM_INITIAL_STATE: LoginFormValues = { email: '', password: '' };\n\nexport default function LoginForm() {\n  const [isVisiblePassword, setIsVisiblePassword] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const handleSubmitForm = (values: LoginFormValues, actions: any) => {\n    dispatch(loginUser(values));\n  };\n\n  return (\n    <div style={{ margin: '20px auto', width: 'fit-content' }}>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        gridGap={6}\n      >\n        <img src={companyLogo} alt=\"Логотип компанії\" />\n        <Title>Вхід в особистий кабінет</Title>\n        <Formik\n          initialValues={FORM_INITIAL_STATE}\n          onSubmit={handleSubmitForm}\n          validateOnBlur\n          validationSchema={loginSchema}\n        >\n          {({ values }) => (\n            <Form>\n              <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                gridGap={4}\n                width={['300px', '436px']}\n              >\n                <FormField\n                  labelName=\"Електронна пошта:\"\n                  fieldName=\"email\"\n                  typeName=\"email\"\n                  placeholderName=\"Електронна пошта\"\n                />\n                <Box position=\"relative\" width=\"100%\">\n                  <FormField\n                    labelName=\"Пароль:\"\n                    fieldName=\"password\"\n                    typeName={isVisiblePassword ? 'text' : 'password'}\n                    placeholderName=\"Ваш пароль\"\n                  />\n                  <Button\n                    type=\"button\"\n                    position=\"absolute\"\n                    right=\"0\"\n                    bottom=\"0\"\n                    onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n                      setIsVisiblePassword(!isVisiblePassword)\n                    }\n                    variant=\"content\"\n                  >\n                    {isVisiblePassword ? (\n                      <RxEyeClosed size={22} />\n                    ) : (\n                      <RxEyeOpen size={22} />\n                    )}\n                  </Button>\n                </Box>\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  width={['150px', '188px']}\n                  mt={2}\n                >\n                  Увійти\n                </Button>\n              </Box>\n              <Box display=\"flex\" justifyContent=\"center\" marginTop=\"12px\">\n                <ResetPasswordButton email={values.email} />\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Image = styled.div`\n  width: 600px;\n  height: 100vh;\n  background-image: url('${process.env.PUBLIC_URL}/login-background.jpg');\n  background-size: cover;\n`;\n","import Box from 'components/Box';\nimport LoginForm from 'components/LoginForm';\nimport { Image } from './LoginPage.styled';\n\nexport default function LoginPage() {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      maxWidth={['480px', '768px', '1280px']}\n      height=\"100vh\"\n      mx=\"auto\"\n      bg=\"primaryBackground\"\n    >\n      <LoginForm />\n      <Box display={['none', 'none', 'block']} width={600}>\n        <Image />\n      </Box>\n    </Box>\n  );\n}\n"],"names":["ResetPasswordButton","_ref","email","dispatch","useAppDispatch","_jsxs","Button","type","onClick","restorePasswordViaEmail","variant","children","_jsx","MdUpdate","size","Yup","shape","min","max","matches","required","password","Title","styled","_templateObject","_taggedTemplateLiteral","props","theme","fontSizes","l","colors","secondaryText","devices","xl","FORM_INITIAL_STATE","LoginForm","_useState","useState","_useState2","_slicedToArray","isVisiblePassword","setIsVisiblePassword","style","margin","width","Box","display","flexDirection","justifyContent","alignItems","gridGap","src","companyLogo","alt","Formik","initialValues","onSubmit","values","actions","loginUser","validateOnBlur","validationSchema","loginSchema","Form","FormField","labelName","fieldName","typeName","placeholderName","position","right","bottom","e","RxEyeClosed","RxEyeOpen","mt","marginTop","Image","process","LoginPage","maxWidth","height","mx","bg"],"sourceRoot":""}