{"version":3,"file":"static/js/377.41564ca0.chunk.js","mappings":"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","sources":["helpers/schemas/auth/login.schema.ts","components/LoginForm/LoginForm.styled.ts","components/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.styled.ts","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(\n      10,\n      'Електронна пошта занадто коротка - має містити мінімум 10 символів.'\n    )\n    .max(\n      63,\n      'Електронна пошта занадто довга - має містити максимум 63 символів.'\n    )\n    .email('Невалідна пошта')\n    .matches(\n      /^(\\w+([.-]?\\w+){1,})*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/,\n      'Будь ласка введіть валідну адресу електронної пошти'\n    )\n    .required(\"Електронна пошта є обов'язковим полем\"),\n  password: Yup.string()\n    .min(7, 'Пароль занадто короткий - має містити мінімум 7 символів.')\n    .max(32, 'Пароль занадтно довгий - має містити максимум 32 символи.')\n    .matches(\n      /^\\d*(?=.*[a-z])(?=.*[A-Z])\\S+\\D*\\d*$/,\n      'Пароль має містити лише: великі літери, маленькі літери та цифри'\n    )\n    .required(\"Пароль є обов'язковим полем\"),\n});\n\nexport default loginSchema;\n","import styled from 'styled-components';\nimport { devices } from 'helpers/constants';\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: ${props => props.theme.fontSizes.l};\n  color: ${props => props.theme.colors.secondaryText};\n\n  @media ${devices.tablet} {\n    font-size: ${props => props.theme.fontSizes.xl};\n  }\n`;\n","import { useState } from 'react';\nimport { useAppDispatch } from 'hooks';\nimport { loginUser } from 'redux/user';\nimport { Formik, Form } from 'formik';\nimport loginSchema from 'helpers/schemas/auth/login.schema';\nimport { RxEyeClosed, RxEyeOpen } from 'react-icons/rx';\nimport companyLogo from 'asserts/company-logo.svg';\nimport Box from 'components/Box';\nimport { Button } from 'helpers/styles';\nimport { Title } from './LoginForm.styled';\nimport FormField from 'components/FormField';\n\ninterface LoginFormValues {\n  email: string;\n  password: string;\n}\n\nconst FORM_INITIAL_STATE: LoginFormValues = { email: '', password: '' };\n\nexport default function LoginForm() {\n  const [isVisiblePassword, setIsVisiblePassword] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const handleSubmitForm = (values: LoginFormValues, actions: any) => {\n    dispatch(loginUser(values));\n  };\n\n  return (\n    <div style={{ margin: '20px auto', width: 'fit-content' }}>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        gridGap={6}\n      >\n        <img src={companyLogo} alt=\"Логотип компанії\" />\n        <Title>Вхід в особистий кабінет</Title>\n        <Formik\n          initialValues={FORM_INITIAL_STATE}\n          onSubmit={handleSubmitForm}\n          validateOnBlur\n          validationSchema={loginSchema}\n        >\n          <Form>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              gridGap={4}\n              width={['300px', '436px']}\n            >\n              <FormField\n                labelName=\"Електронна пошта:\"\n                fieldName=\"email\"\n                typeName=\"email\"\n                placeholderName=\"hello@mail.com\"\n              />\n              <Box position=\"relative\" width=\"100%\">\n                <FormField\n                  labelName=\"Пароль:\"\n                  fieldName=\"password\"\n                  typeName={isVisiblePassword ? 'text' : 'password'}\n                  placeholderName=\"Ваш пароль\"\n                />\n                <Button\n                  type=\"button\"\n                  position=\"absolute\"\n                  right=\"0\"\n                  bottom=\"0\"\n                  onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n                    setIsVisiblePassword(!isVisiblePassword)\n                  }\n                  variant=\"content\"\n                >\n                  {isVisiblePassword ? (\n                    <RxEyeClosed size={22} />\n                  ) : (\n                    <RxEyeOpen size={22} />\n                  )}\n                </Button>\n              </Box>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                width={['150px', '188px']}\n                mt={2}\n              >\n                Увійти\n              </Button>\n            </Box>\n          </Form>\n        </Formik>\n      </Box>\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Image = styled.div`\n  width: 600px;\n  height: 100vh;\n  background-image: url('${process.env.PUBLIC_URL}/login-background.jpg');\n  background-size: cover;\n`;\n","import Box from 'components/Box';\nimport LoginForm from 'components/LoginForm';\nimport { Image } from './LoginPage.styled';\n\nexport default function LoginPage() {\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        maxWidth={['480px', '768px', '1280px']}\n        height=\"100vh\"\n        mx=\"auto\"\n        bg=\"primaryBackground\"\n      >\n        <LoginForm />\n        <Box display={['none', 'none', 'block']} width={600}>\n          <Image />\n        </Box>\n      </Box>\n    </>\n  );\n}\n"],"names":["Yup","shape","email","min","max","matches","required","password","Title","styled","_templateObject","_taggedTemplateLiteral","props","theme","fontSizes","l","colors","secondaryText","devices","xl","FORM_INITIAL_STATE","LoginForm","_useState","useState","_useState2","_slicedToArray","isVisiblePassword","setIsVisiblePassword","dispatch","useAppDispatch","_jsx","style","margin","width","children","_jsxs","Box","display","flexDirection","justifyContent","alignItems","gridGap","src","companyLogo","alt","Formik","initialValues","onSubmit","values","actions","loginUser","validateOnBlur","validationSchema","loginSchema","Form","FormField","labelName","fieldName","typeName","placeholderName","position","Button","type","right","bottom","onClick","e","variant","RxEyeClosed","size","RxEyeOpen","mt","Image","process","LoginPage","_Fragment","maxWidth","height","mx","bg"],"sourceRoot":""}