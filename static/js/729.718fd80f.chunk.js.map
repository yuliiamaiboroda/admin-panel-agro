{"version":3,"file":"static/js/729.718fd80f.chunk.js","mappings":"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","sources":["components/Box/Box.tsx","components/CardButton/CardButton.styled.ts","components/CardButton/CardButton.tsx","components/ResumeCard/ResumeCard.tsx","components/ResumesGallery/ResumesGallery.tsx","helpers/schemas/resumes/index.ts","components/ResumeForm/ResumeForm.tsx","components/ResumesFilter/ResumesFilter.tsx","pages/ResumesPage/ResumesPage.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  typography,\n  space,\n  color,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n} from 'styled-system';\nimport type {\n  TypographyProps,\n  SpaceProps,\n  ColorProps,\n  LayoutProps,\n  FlexboxProps,\n  GridProps,\n  BackgroundProps,\n  BorderProps,\n  PositionProps,\n  ShadowProps,\n} from 'styled-system';\n\ninterface IProps\n  extends TypographyProps,\n    SpaceProps,\n    ColorProps,\n    LayoutProps,\n    FlexboxProps,\n    GridProps,\n    BackgroundProps,\n    BorderProps,\n    PositionProps,\n    ShadowProps {\n  children: React.ReactNode;\n}\n\nconst Box = styled.div<IProps>`\n  ${typography}\n  ${space}\n  ${color}\n  ${layout}\n  ${flexbox}\n  ${grid}\n  ${background}\n  ${border}\n  ${position}\n  ${shadow}\n`;\n\nexport default Box;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const CardButtonLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 52px;\n  height: 36px;\n  border-radius: ${p => p.theme.radii.button};\n  border: 1px solid #c03221;\n`;\n","import { HiOutlinePencil, HiOutlineTrash } from 'react-icons/hi';\nimport { CardButtonLink } from './CardButton.styled';\n\ninterface IProps {\n  type: 'edit' | 'remove';\n  navigateTo: string;\n}\n\nexport default function CardButton({ type, navigateTo }: IProps) {\n  return (\n    <CardButtonLink to={navigateTo}>\n      {type === 'edit' ? (\n        <HiOutlinePencil style={{ pointerEvents: 'none', color: '#c03221' }} />\n      ) : (\n        <HiOutlineTrash style={{ pointerEvents: 'none', color: '#c03221' }} />\n      )}\n    </CardButtonLink>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\nimport { useAppDispatch } from 'hooks';\nimport { updateResumeViews, updateResumeIsFavorite } from 'redux/resumes';\nimport type { IResumeEntity } from 'helpers/types';\nimport CardButton from 'components/CardButton';\nimport Box from 'components/Box';\n\nexport default function ResumeCard({\n  _id,\n  name,\n  position,\n  comment,\n  isFavorite,\n  isReviewed,\n}: IResumeEntity) {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const handleUpdateViews = () => {\n    if (!isReviewed) {\n      dispatch(updateResumeViews(_id));\n    }\n  };\n\n  return (\n    <li\n      style={{ borderWidth: '2px', borderStyle: 'solid', borderColor: 'teal' }}\n      onClick={() => {\n        handleUpdateViews();\n        navigate(_id);\n      }}\n    >\n      {!isReviewed ? <h3>New!!!</h3> : null}\n      <h2>{name}</h2>\n      <h3>{position}</h3>\n      <p>{comment}</p>\n      <Box display=\"flex\" justifyContent=\"center\" gridGap={2}>\n        <button\n          type=\"button\"\n          onClick={event => {\n            event.stopPropagation();\n            dispatch(updateResumeIsFavorite(_id));\n          }}\n        >\n          {isFavorite ? 'Remove from fovorites' : 'Add to favorites'}\n        </button>\n        <CardButton type=\"remove\" navigateTo={`${_id}/confirm`} />\n      </Box>\n    </li>\n  );\n}\n","import { useAppSelector, useAppDispatch, useQueryParams } from 'hooks';\nimport {\n  selectResumes,\n  selectResumePagination,\n  loadMoreResumes,\n} from 'redux/resumes';\nimport ResumeCard from 'components/ResumeCard';\n\nexport default function ResumesGallery() {\n  const [queryParams] = useQueryParams();\n  const resumes = useAppSelector(selectResumes);\n  const pagination = useAppSelector(selectResumePagination);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '16px',\n        }}\n      >\n        {resumes.map(resume => (\n          <ResumeCard key={resume._id} {...resume} />\n        ))}\n      </ul>\n      {resumes.length < pagination.total ? (\n        <button\n          type=\"button\"\n          onClick={() =>\n            dispatch(\n              loadMoreResumes({\n                ...queryParams,\n                skip: pagination.skip + pagination.limit,\n              })\n            )\n          }\n        >\n          Load more\n        </button>\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport * as Yup from 'yup';\nimport { fileFormat, fileSize } from 'utils';\n\nexport const resumeShema = (fileField: React.RefObject<HTMLInputElement>) =>\n  Yup.object({\n    name: Yup.string().trim().min(2).max(62).required(),\n    phone: Yup.string()\n      .trim()\n      .matches(\n        /^\\+380\\d{9}$/,\n        'Phone should containe +380 and another 9 numbers'\n      )\n      .required(),\n    email: Yup.string()\n      .trim()\n      .matches(\n        /^(\\w+([.-]?\\w+){1,})*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/,\n        'Поле електронної пошти повинно містити тільки: латинські літери, цифри та знаки, на початку або в кінці електронної пошти не може бути дефіс, перед (@) повинно бути не менше 2 символів.'\n      )\n      .required(),\n    position: Yup.string()\n      .trim()\n      // TODO:  discus about validation of position field\n      .matches(\n        /^(?![-' ]+$)[a-zA-Zа-яА-ЯіІїЇєЄ0-9-'‘ʼ,./ ]+$/,\n        'Поле позиції повинно містити тільки: латинські літери, цифри, дефіси та апостроф'\n      )\n      .min(2)\n      .max(62)\n      .required(),\n    resume: Yup.mixed()\n      .test(\n        'is-corrent-forat',\n        'Резюме повине буди в форматі pdf',\n        fileFormat(fileField, ['pdf'])\n      )\n      .test(\n        'is-correct-size',\n        'Розмір файлу не повинен перевищувати 5Mb',\n        fileSize(fileField, 5)\n      ),\n    comment: Yup.string().trim().min(2).max(2000).required(),\n    agreement: Yup.bool()\n      .oneOf([true], 'Agreement should be checked')\n      .required(),\n  });\n","import { useRef, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { createResume } from 'redux/resumes';\nimport { getAllVacancyTitles, selectVacancyTitles } from 'redux/vacancies';\nimport { resumeShema } from 'helpers/schemas/resumes';\nimport UploadFileField from 'components/UploadFileField';\n\ninterface IProps {\n  onSubmit?: () => void;\n}\n\nexport default function ResumeForm({ onSubmit }: IProps) {\n  const fileField = useRef<HTMLInputElement>(null);\n  const vacancies = useAppSelector(selectVacancyTitles);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getAllVacancyTitles());\n  }, [dispatch]);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        phone: '+380',\n        email: '',\n        position: '',\n        resume: '',\n        comment: '',\n        agreement: false,\n      }}\n      validationSchema={resumeShema(fileField)}\n      onSubmit={(\n        { name, phone, email, position, comment, agreement },\n        action\n      ) => {\n        dispatch(\n          createResume({\n            name,\n            phone,\n            email,\n            position,\n            comment,\n            agreement,\n            resume: fileField.current?.files\n              ? fileField.current?.files[0]\n              : null,\n          })\n        );\n        action.resetForm();\n        if (onSubmit) {\n          onSubmit();\n        }\n      }}\n    >\n      {({ values, setFieldValue }) => (\n        <Form>\n          <label>\n            Name: <Field id=\"name\" name=\"name\" type=\"text\" />\n            <ErrorMessage name=\"name\" />\n          </label>\n          <br />\n          <label>\n            Phone: <Field id=\"phone\" name=\"phone\" type=\"text\" />\n            <ErrorMessage name=\"phone\" />\n          </label>\n          <br />\n          <label>\n            Email: <Field id=\"email\" name=\"email\" type=\"email\" />\n            <ErrorMessage name=\"email\" />\n          </label>\n          <br />\n          <label>\n            Position:\n            <select\n              name=\"position\"\n              id=\"position\"\n              value={values.position}\n              onChange={event => setFieldValue('position', event.target.value)}\n            >\n              <option value=\"\">Оберіть вакансію</option>\n              {vacancies.map(({ _id, title }) => (\n                <option key={_id} value={title}>\n                  {title}\n                </option>\n              ))}\n              <option value=\"other\">Інше</option>\n            </select>\n            <ErrorMessage name=\"position\" />\n          </label>\n          <br />\n          <UploadFileField name=\"resume\" fileRef={fileField} />\n          <br />\n          <label>\n            Comment: <Field id=\"comment\" name=\"comment\" type=\"text\" />\n            <ErrorMessage name=\"comment\" />\n          </label>\n          <br />\n          <label>\n            Agreement: <Field id=\"agreement\" name=\"agreement\" type=\"checkbox\" />\n            <ErrorMessage name=\"agreement\" />\n          </label>\n          <br />\n          <button type=\"submit\" disabled={!values.agreement}>\n            Add resume\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector, useQueryParams } from 'hooks';\nimport { getAllResumes } from 'redux/resumes';\nimport { getAllVacancyTitles, selectVacancyTitles } from 'redux/vacancies';\n\nconst LIMIT = [\n  { value: '2', label: 2 },\n  { value: '5', label: 5 },\n  { value: '10', label: 10 },\n  { value: '15', label: 15 },\n  { value: '', label: 20 },\n  { value: '25', label: 25 },\n  { value: '30', label: 30 },\n  { value: '40', label: 40 },\n  { value: '50', label: 50 },\n];\n\nexport default function ResumesFilter() {\n  const [queryParams, setQueryParams] = useQueryParams();\n  const titles = useAppSelector(selectVacancyTitles);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getAllVacancyTitles());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getAllResumes(queryParams));\n  }, [dispatch, queryParams]);\n\n  return (\n    <>\n      <label>\n        Show favorites\n        <input\n          type=\"checkbox\"\n          name=\"isFavorite\"\n          checked={queryParams.isFavorite ? true : false}\n          onChange={({ target }) =>\n            setQueryParams({ isFavorite: target.checked ? 'true' : '' })\n          }\n        />\n      </label>\n      <select\n        onChange={({ target }) => setQueryParams({ position: target.value })}\n        value={queryParams.position ? queryParams.position : ''}\n      >\n        <option value=\"\">All</option>\n        {titles.map(({ _id, title }) => (\n          <option key={_id} value={title}>\n            {title}\n          </option>\n        ))}\n        <option value=\"other\">Other</option>\n      </select>\n      <select\n        onChange={({ target }) => setQueryParams({ sort: target.value })}\n        value={queryParams.sort ? queryParams.sort : ''}\n      >\n        <option value=\"\">Newer</option>\n        <option value=\"asc\">Older</option>\n      </select>\n      <select\n        onChange={({ target }) => setQueryParams({ limit: target.value })}\n        value={queryParams.limit ? queryParams.limit : ''}\n      >\n        {LIMIT.map(({ value, label }, index) => (\n          <option key={index} value={value}>\n            {label}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n}\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { useAppSelector, useModal } from 'hooks';\nimport { selectResumeError } from 'redux/resumes';\nimport ResumesGallery from 'components/ResumesGallery';\nimport Modal from 'components/Modal';\nimport ResumeForm from 'components/ResumeForm';\nimport ResumesFilter from 'components/ResumesFilter';\nimport Loader from 'components/Loader';\n\nexport default function ResumesPage() {\n  const { isModalOpen, openModal, closeModal } = useModal();\n  const error = useAppSelector(selectResumeError);\n\n  if (error) {\n    Notify.failure(error);\n    return (\n      <>\n        <h1>Resumes page</h1>\n        <h2>Ooops... Something went wrong</h2>\n        <h3>It seems like: {error}</h3>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h1>This is ResumesPage!</h1>\n      <ResumesFilter />\n      <button type=\"button\" onClick={openModal}>\n        Create resume\n      </button>\n      <ResumesGallery />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <ResumeForm onSubmit={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","typography","space","color","layout","flexbox","grid","background","border","position","shadow","CardButtonLink","Link","p","theme","radii","button","CardButton","_ref","type","navigateTo","_jsx","to","children","HiOutlinePencil","style","pointerEvents","HiOutlineTrash","ResumeCard","_id","name","comment","isFavorite","isReviewed","navigate","useNavigate","dispatch","useAppDispatch","_jsxs","borderWidth","borderStyle","borderColor","onClick","updateResumeViews","Box","display","justifyContent","gridGap","event","stopPropagation","updateResumeIsFavorite","concat","ResumesGallery","_useQueryParams","useQueryParams","queryParams","_slicedToArray","resumes","useAppSelector","selectResumes","pagination","selectResumePagination","_Fragment","flexWrap","gap","map","resume","_objectSpread","length","total","loadMoreResumes","skip","limit","resumeShema","fileField","Yup","trim","min","max","required","phone","matches","email","test","fileFormat","fileSize","agreement","oneOf","ResumeForm","onSubmit","useRef","vacancies","selectVacancyTitles","useEffect","getAllVacancyTitles","Formik","initialValues","validationSchema","_ref2","action","_fileField$current","_fileField$current2","createResume","current","files","resetForm","_ref3","values","setFieldValue","Form","Field","id","ErrorMessage","value","onChange","target","_ref4","title","UploadFileField","fileRef","disabled","LIMIT","label","ResumesFilter","_useQueryParams2","setQueryParams","titles","getAllResumes","checked","sort","_ref5","_ref6","index","ResumesPage","_useModal","useModal","isModalOpen","openModal","closeModal","error","selectResumeError","Notify","Suspense","fallback","Loader","Outlet","Modal","onClose"],"sourceRoot":""}