{"version":3,"file":"static/js/978.18dd0211.chunk.js","mappings":"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","sources":["components/ModalLogout/ModalLogout.tsx","components/PageTitle/PageTitle.styled.ts","components/PageTitle/PageTitle.tsx","helpers/schemas/auth/updatePassword.schema.ts","components/ModalChangePassword/ModalChangePassword.tsx","pages/ProfilePage/ProfilePage.tsx"],"sourcesContent":["import React from 'react';\nimport ConfirmationModal from 'components/ConfirmationModal';\n\ninterface IProps {\n  onClose: () => void;\n  handleLogout: () => void;\n}\n\nexport default function ModalLogout({ onClose, handleLogout }: IProps) {\n  return (\n    <ConfirmationModal\n      title={`Ви дійсно хочете вийти?`}\n      onCancel={onClose}\n      onConfirm={handleLogout}\n    />\n  );\n}\n","import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  height: 100px;\n  display: flex;\n  align-items: center;\n  padding: ${p => p.theme.space[6]}px ${p => p.theme.space[8]}px;\n  background: ${props => props.theme.colors.primaryGradient};\n  border-radius: ${props => props.theme.radii.pageTitle};\n\n  @media ${devices.tablet} {\n    height: 150px;\n  }\n\n  @media ${devices.desktop} {\n    height: 234px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.colors.accentText};\n  font-size: ${props => props.theme.fontSizes.xl};\n\n  @media ${devices.desktop} {\n    font-size: ${props => props.theme.fontSizes.xxl};\n  }\n`;\n","import { Title, TitleWrapper } from './PageTitle.styled';\n\ninterface IProps {\n  title: string;\n}\n\nexport default function PageTitle({ title }: IProps) {\n  return (\n    <TitleWrapper>\n      <Title>{title}</Title>\n    </TitleWrapper>\n  );\n}\n","import * as Yup from 'yup';\n\nconst updatePasswordSchema = Yup.object().shape({\n  oldPassword: Yup.string()\n    .required()\n    .min(7, 'Пароль занадто короткий - має містити мінімум 7 символів.')\n    .max(32, 'Пароль занадто довгий - має містити максимум 32 символи.')\n    .required(\"Це поле є обов'язковим\")\n    .matches(\n      /^\\d*(?=.*[a-z])(?=.*[A-Z])\\S+\\D*\\d*$/,\n      'Пароль має містити лише: великі літери латиницею, маленькі літери латиницею та цифри'\n    ),\n  newPassword: Yup.string()\n  .required(\"Це поле є обов'язковим\")\n  .min(7, 'Пароль занадто короткий - має містити мінімум 7 символів.')\n    .max(32, 'Пароль занадто довгий - має містити максимум 32 символи.')\n    .matches(\n      /^\\d*(?=.*[a-z])(?=.*[A-Z])\\S+\\D*\\d*$/,\n      'Пароль має містити лише: великі літери латиницею, маленькі літери латиницею та цифри'\n    ),\n  confirmPassword: Yup.string()\n  .required(\"Це поле є обов'язковим\")\n  .oneOf([Yup.ref('newPassword'), ''], 'Паролі мають співпадати!'),\n});\n\nexport default updatePasswordSchema;\n","import { useState } from 'react';\nimport { useAppDispatch } from 'hooks';\nimport { RxEyeClosed, RxEyeOpen } from 'react-icons/rx';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { updatePasswordById } from 'redux/users';\nimport updatePasswordSchema from 'helpers/schemas/auth/updatePassword.schema';\n\ninterface IProps {\n  onClose: () => void;\n}\n\nexport default function ModalChangePassword({ onClose }: IProps) {\n  const [isVisibleOldPassword, setIsVisibleOldPassword] = useState(false);\n  const [isVisibleNewPassword, setIsVisibleNewPassword] = useState(false);\n  const [isVisibleConfirmPassword, setIsVisibleConfirmPassword] =\n    useState(false);\n  const dispatch = useAppDispatch();\n\n  const initialState = {\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialState}\n      validationSchema={updatePasswordSchema}\n      onSubmit={(values, actions) => {\n        const { oldPassword, newPassword } = values;\n        dispatch(updatePasswordById({ oldPassword, newPassword }));\n        actions.resetForm();\n        onClose();\n      }}\n    >\n      <Form>\n        <label>\n          Старий пароль:\n          <Field\n            name=\"oldPassword\"\n            type={isVisibleOldPassword ? 'text' : 'password'}\n            id=\"oldPassword\"\n          />\n          <button\n            type=\"button\"\n            onClick={() => setIsVisibleOldPassword(!isVisibleOldPassword)}\n          >\n            {isVisibleOldPassword ? <RxEyeClosed /> : <RxEyeOpen />}\n          </button>\n          <ErrorMessage name=\"oldPassword\" />\n        </label>\n        <br />\n        <label>\n          Новий пароль:\n          <Field\n            name=\"newPassword\"\n            type={isVisibleNewPassword ? 'text' : 'password'}\n            id=\"newPassword\"\n          />\n          <button\n            type=\"button\"\n            onClick={() => setIsVisibleNewPassword(!isVisibleNewPassword)}\n          >\n            {isVisibleNewPassword ? <RxEyeClosed /> : <RxEyeOpen />}\n          </button>\n          <ErrorMessage name=\"newPassword\" />\n        </label>\n        <br />\n        <label>\n          Підтвердити новий пароль:\n          <Field\n            name=\"confirmPassword\"\n            type={isVisibleConfirmPassword ? 'text' : 'password'}\n            id=\"confirmPassword\"\n          />\n          <button\n            type=\"button\"\n            onClick={() =>\n              setIsVisibleConfirmPassword(!isVisibleConfirmPassword)\n            }\n          >\n            {isVisibleConfirmPassword ? <RxEyeClosed /> : <RxEyeOpen />}\n          </button>\n          <ErrorMessage name=\"confirmPassword\" />\n        </label>\n        <br />\n        <button type=\"button\" onClick={onClose}>\n          Назад\n        </button>\n        <button type=\"submit\">Змінити пароль</button>\n      </Form>\n    </Formik>\n  );\n}\n","import { useAppSelector, useAppDispatch } from 'hooks';\nimport { logoutUser, selectUser } from 'redux/user';\nimport { AiOutlineLogout, AiOutlineReload } from 'react-icons/ai';\nimport { useState } from 'react';\nimport { Roles } from 'helpers/constants';\nimport Modal from 'components/Modal/Modal';\nimport ModalLogout from 'components/ModalLogout/ModalLogout';\nimport translateRole from 'utils/translate-role';\nimport ModalChangePassword from 'components/ModalChangePassword';\nimport PageTitle from 'components/PageTitle';\n\nexport default function ProfilePage() {\n  const [isLogoutModalOpen, setIsLogoutModalOpen] = useState(false);\n  const [isChangePassModalOpen, setIsChangePassModalOpen] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const {\n    user: { name, surname, role, email },\n  } = useAppSelector(selectUser);\n\n  return (\n    <>\n      <PageTitle title='Ваші особисті дані'/>\n      <b>Ім'я :</b>\n      <p>\n        {name} {surname}\n      </p>\n      <b>Роль: </b>\n      {role && <p>{translateRole(Roles[role])}</p>}\n      <b>Електронна адреса: </b>\n      <p>{email}</p>\n\n      <button\n        type=\"button\"\n        onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n          setIsChangePassModalOpen(true)\n        }\n      >\n        <AiOutlineReload /> Змінити пароль\n      </button>\n      {isChangePassModalOpen && (\n        <Modal onClose={() => setIsChangePassModalOpen(false)}>\n          <ModalChangePassword\n            onClose={() => setIsChangePassModalOpen(false)}\n          />\n        </Modal>\n      )}\n      <button\n        type=\"button\"\n        onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n          setIsLogoutModalOpen(true)\n        }\n      >\n        <AiOutlineLogout /> Вийти з аккаунту\n      </button>\n      {isLogoutModalOpen && (\n        <Modal onClose={() => setIsLogoutModalOpen(false)}>\n          <ModalLogout\n            onClose={() => setIsLogoutModalOpen(false)}\n            handleLogout={() => dispatch(logoutUser())}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"names":["ModalLogout","_ref","onClose","handleLogout","_jsx","ConfirmationModal","title","onCancel","onConfirm","TitleWrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","props","colors","primaryGradient","radii","pageTitle","devices","Title","_templateObject2","accentText","fontSizes","xl","xxl","PageTitle","children","Yup","shape","oldPassword","required","min","max","matches","newPassword","confirmPassword","oneOf","ModalChangePassword","_useState","useState","_useState2","_slicedToArray","isVisibleOldPassword","setIsVisibleOldPassword","_useState3","_useState4","isVisibleNewPassword","setIsVisibleNewPassword","_useState5","_useState6","isVisibleConfirmPassword","setIsVisibleConfirmPassword","dispatch","useAppDispatch","Formik","initialValues","validationSchema","updatePasswordSchema","onSubmit","values","actions","updatePasswordById","resetForm","_jsxs","Form","Field","name","type","id","onClick","RxEyeClosed","RxEyeOpen","ErrorMessage","ProfilePage","isLogoutModalOpen","setIsLogoutModalOpen","isChangePassModalOpen","setIsChangePassModalOpen","_useAppSelector$user","useAppSelector","selectUser","user","surname","role","email","_Fragment","translateRole","Roles","e","AiOutlineReload","Modal","AiOutlineLogout","logoutUser"],"sourceRoot":""}