{"version":3,"file":"static/js/872.08969027.chunk.js","mappings":"yPAYe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,GAA6BC,EAAAA,EAAAA,IAAeC,EAAAA,IAApCC,EAAKH,EAALG,MAAOC,EAASJ,EAATI,UACfC,GAAsCC,EAAAA,EAAAA,MAA9BC,EAAYF,EAAZE,aAAcC,EAAWH,EAAXG,YAWtB,OATAC,EAAAA,EAAAA,YAAU,WAIR,OAHID,GACFV,GAASY,EAAAA,EAAAA,IAAkBF,IAEtB,WACLV,GAASa,EAAAA,EAAAA,MACX,CACF,GAAG,CAACH,EAAaV,IAEbK,GACFS,EAAAA,OAAAA,QAAeT,IACRU,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAE,cAAAC,OAAgBT,GAAgB,IAAMU,SAAO,MAIhEJ,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAAC,UACEN,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACC,QAAS,kBAAMzB,EAAS,cAADoB,OAAeT,GAAgB,IAAK,EAACY,SAChEf,GAAYS,EAAAA,EAAAA,KAACS,EAAAA,EAAM,KAAMT,EAAAA,EAAAA,KAACU,EAAAA,GAAM,OAIzC,C","sources":["components/VacanciesModalLayout/VacanciesModalLayout.tsx"],"sourcesContent":["import { Navigate, Outlet, useNavigate, useParams } from 'react-router-dom';\nimport Modal from 'components/Modal/';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport {\n  getCertainVacancy,\n  removeCertainVacancy,\n  selectVacancies,\n} from 'redux/vacancies';\nimport { useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { Notify } from 'notiflix';\n\nexport default function VacanciesModalLayout() {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const { error, isLoading } = useAppSelector(selectVacancies);\n  const { categoryName, vacanciesId } = useParams();\n\n  useEffect(() => {\n    if (vacanciesId) {\n      dispatch(getCertainVacancy(vacanciesId));\n    }\n    return () => {\n      dispatch(removeCertainVacancy());\n    };\n  }, [vacanciesId, dispatch]);\n\n  if (error) {\n    Notify.failure(error);\n    return <Navigate to={`/vacancies/${categoryName || ''}`} replace />;\n  }\n\n  return (\n    <>\n      <Modal onClose={() => navigate(`/vacancies/${categoryName || ''}`)}>\n        {isLoading ? <Loader /> : <Outlet />}\n      </Modal>\n    </>\n  );\n}\n"],"names":["VacanciesModalLayout","navigate","useNavigate","dispatch","useAppDispatch","_useAppSelector","useAppSelector","selectVacancies","error","isLoading","_useParams","useParams","categoryName","vacanciesId","useEffect","getCertainVacancy","removeCertainVacancy","Notify","_jsx","Navigate","to","concat","replace","_Fragment","children","Modal","onClose","Loader","Outlet"],"sourceRoot":""}