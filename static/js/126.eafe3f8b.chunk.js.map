{"version":3,"file":"static/js/126.eafe3f8b.chunk.js","mappings":"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","sources":["components/CardImageMarkup/CardImageMarkup.styled.ts","components/CardImageMarkup/CardImageMarkup.tsx","components/PageTitle/PageTitle.styled.ts","components/PageTitle/PageTitle.tsx","components/ServiceCard/ServiceCard.tsx","components/ServicesGallery/ServicesGallery.tsx","pages/ServicesPage/ServicesPage.tsx"],"sourcesContent":["import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 284px;\n  height: 172px;\n  margin-bottom: ${props => props.theme.space[2]}px;\n  object-fit: cover; //TODO  cover or contain?\n  \n  @media ${devices.tablet} { \n    width: 366px;\n    height: 222px;\n  }\n`;\n","import { Image } from './CardImageMarkup.styled';\n\ninterface IProps {\n  src: string;\n  alt: string;\n}\n\nexport default function CardImageMarkup({ src, alt }: IProps) {\n  return <Image src={src} alt={alt} width=\"348\" height=\"222\" />;\n}\n","import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  height: 100px;\n  display: flex;\n  align-items: center;\n  padding: ${p => p.theme.space[6]}px ${p => p.theme.space[8]}px;\n  background: ${props => props.theme.colors.gradientBackground};\n  border-radius: ${props => props.theme.radii.pageTitle};\n  \n  @media ${devices.tablet} { \n    height: 150px;\n  }\n  \n  @media ${devices.desktop} { \n    height: 234px;\n  }\n\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.colors.pageTitleText};\n  font-size: ${props => props.theme.fontSizes.xl}px;\n  \n  @media ${devices.desktop} { \n    font-size: ${props => props.theme.fontSizes.xxl}px;\n  }\n`;\n","import { Title, TitleWrapper } from './PageTitle.styled';\n\ninterface IProps {\n  title: string;\n}\n\nexport default function PageTitle({ title }: IProps) {\n  return (\n    <TitleWrapper>\n      <Title>{title}</Title>\n    </TitleWrapper>\n  );\n}\n","import { Roles } from 'helpers/constants';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport RestrictedComponent from 'components/RestrictedComponent';\nimport CardWrapperMarkup from 'components/CardWrapperMarkup';\nimport CardImageMarkup from 'components/CardImageMarkup';\nimport CardTitleStringMarkup from 'components/CardTitleStringMarkup';\nimport CardDetailStringMarkup from 'components/CardDetailStringMarkup';\nimport CardButton from 'components/CardButton';\nimport Box from 'components/Box';\n\ninterface IProps {\n  _id: string;\n  title: string;\n  description: string;\n  imageURL: string;\n  price: string;\n  contactMail: string;\n  contactPhone: string;\n}\n\nexport default function ServiceCard({\n  _id,\n  title,\n  description,\n  imageURL,\n  price,\n  contactMail,\n  contactPhone,\n}: IProps) {\n  const navigate = useNavigate();\n  const routeLocation = useLocation();\n\n  const clickHandler = (event: React.MouseEvent) => {\n    if (!(event.target instanceof HTMLAnchorElement)) {\n      navigate(`${_id}`, { state: { from: routeLocation } });\n    }\n    return;\n  };\n\n  return (\n    <>\n      <CardWrapperMarkup onClick={() => clickHandler}>\n        <CardImageMarkup src={imageURL} alt={title} />\n        <CardTitleStringMarkup value={title} />\n        <CardDetailStringMarkup title=\"Опис\" value={description} />\n        <CardDetailStringMarkup title=\"Ціна\" value={price} />\n        <CardDetailStringMarkup title=\"Телефон\" value={contactPhone} />\n        <CardDetailStringMarkup title=\"Пошта\" value={contactMail} />\n        <RestrictedComponent accessRight={Roles.servicesManager}>\n          <Box display=\"flex\" justifyContent=\"center\" gridGap={2}>\n            <CardButton type=\"edit\" navigateTo={`${_id}/form`} />\n            <CardButton type=\"remove\" navigateTo={`${_id}/confirm`} />\n          </Box>\n        </RestrictedComponent>\n      </CardWrapperMarkup>\n    </>\n  );\n}\n","import { useAppSelector, useModal, useAppDispatch } from 'hooks';\nimport { createService, selectServices } from 'redux/services';\nimport Modal from 'components/Modal';\nimport ServiceCard from 'components/ServiceCard';\nimport ServiceForm from 'components/ServiceForm';\nimport { Roles } from 'helpers/constants';\nimport RestrictedComponent from 'components/RestrictedComponent';\nimport GalleryWrapper from 'components/GalleryWrapper';\nimport CreateButton from 'components/CreateButton';\n\nexport default function ServicesGallery() {\n  const services = useAppSelector(selectServices);\n  const { isModalOpen, openModal, closeModal } = useModal();\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <RestrictedComponent accessRight={Roles.servicesManager}>\n        <CreateButton onClick={openModal} />\n      </RestrictedComponent>\n      <GalleryWrapper>\n        {services.map(({ _id, ...rest }) => (\n          <ServiceCard key={_id} _id={_id} {...rest} />\n        ))}\n      </GalleryWrapper>\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <ServiceForm\n            onSubmit={serviceData => {\n              dispatch(createService(serviceData));\n              closeModal();\n            }}\n            onCancel={() => closeModal()}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { useEffect, Suspense } from 'react';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { getAllServices, selectError } from 'redux/services';\nimport { Outlet } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nimport PageTitle from 'components/PageTitle';\nimport ServicesGallery from 'components/ServicesGallery';\nimport Loader from 'components/Loader';\n\nexport default function ServicesPage() {\n  const dispatch = useAppDispatch();\n  const error = useAppSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getAllServices());\n  }, [dispatch]);\n\n  if (error) {\n    Notify.failure(error);\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Послуги компанії\" />\n      <ServicesGallery />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["Image","styled","_templateObject","_taggedTemplateLiteral","props","theme","space","devices","CardImageMarkup","_ref","src","alt","_jsx","width","height","TitleWrapper","p","colors","gradientBackground","radii","pageTitle","Title","_templateObject2","pageTitleText","fontSizes","xl","xxl","PageTitle","title","children","ServiceCard","_id","description","imageURL","price","contactMail","contactPhone","navigate","useNavigate","routeLocation","useLocation","clickHandler","event","target","HTMLAnchorElement","concat","state","from","_Fragment","_jsxs","CardWrapperMarkup","onClick","CardTitleStringMarkup","value","CardDetailStringMarkup","RestrictedComponent","accessRight","Roles","Box","display","justifyContent","gridGap","CardButton","type","navigateTo","ServicesGallery","services","useAppSelector","selectServices","_useModal","useModal","isModalOpen","openModal","closeModal","dispatch","useAppDispatch","CreateButton","GalleryWrapper","map","rest","_objectWithoutProperties","_excluded","_objectSpread","Modal","onClose","ServiceForm","onSubmit","serviceData","createService","onCancel","ServicesPage","error","selectError","useEffect","getAllServices","Notify","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}