{"version":3,"file":"static/js/746.d05041f6.chunk.js","mappings":"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","sources":["components/LoadMoreButton/LoadMoreButton.tsx","components/PageTitle/PageTitle.styled.ts","components/PageTitle/PageTitle.tsx","components/Selector/Selector.styled.ts","components/Selector/Selector.tsx","components/SortSelector/SortSelector.tsx","components/ResumeCard/ResumeCard.tsx","components/ResumesGallery/ResumesGallery.tsx","helpers/schemas/resumes/index.ts","components/ResumeForm/ResumeForm.tsx","components/VacancySelector/VacancySelector.tsx","components/LimitSelector/LimitSelector.tsx","components/ResumesFilter/ResumesFilter.tsx","pages/ResumesPage/ResumesPage.tsx"],"sourcesContent":["import { Button } from 'helpers/styles';\n\ninterface IProps {\n  onClick: () => void;\n}\nexport default function LoadMoreButton({ onClick }: IProps) {\n  return (\n    <Button variant=\"primary\" type=\"button\" onClick={onClick} mx=\"auto\">\n      Показати ще\n    </Button>\n  );\n}\n","import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  height: 100px;\n  display: flex;\n  align-items: center;\n  padding: ${p => p.theme.space[6]}px ${p => p.theme.space[8]}px;\n  background: ${props => props.theme.colors.primaryGradient};\n  border-radius: ${props => props.theme.radii.pageTitle};\n\n  @media ${devices.tablet} {\n    height: 150px;\n  }\n\n  @media ${devices.desktop} {\n    height: 234px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.colors.accentText};\n  font-size: ${props => props.theme.fontSizes.xl};\n\n  @media ${devices.desktop} {\n    font-size: ${props => props.theme.fontSizes.xxl};\n  }\n`;\n","import { Title, TitleWrapper } from './PageTitle.styled';\nimport { useEffect } from 'react';\n\ninterface IProps {\n  title: string;\n}\n\nexport default function PageTitle({ title }: IProps) {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  return (\n    <TitleWrapper>\n      <Title>{title}</Title>\n    </TitleWrapper>\n  );\n}\n","import styled from 'styled-components';\nimport Select from 'react-select';\n\nexport const StyledSelector = styled(Select)<any>`\n  flex-grow: 1;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n\n  .selector__control {\n    border-width: 2px;\n    border-style: solid;\n    border-color: ${p => p.theme.colors.confirmation};\n    color: ${p => p.theme.colors.secondaryText};\n    cursor: pointer;\n    transition: box-shadow 250ms linear;\n\n    :hover {\n      border-color: ${p => p.theme.colors.confirmation};\n      box-shadow: ${p => p.theme.shadows.selector};\n    }\n  }\n\n  .selector__indicator-separator {\n    width: 2px;\n    background-color: ${p => p.theme.colors.accentBackground};\n  }\n\n  .selector__indicator {\n    color: ${p => p.theme.colors.confirmation};\n    transition: opacity 250ms linear;\n\n    :hover {\n      color: ${p => p.theme.colors.confirmation};\n      opacity: 0.7;\n    }\n  }\n\n  .selector__menu {\n    overflow: hidden;\n  }\n\n  .selector__menu-list {\n    ::-webkit-scrollbar {\n      width: 5px;\n    }\n\n    ::-webkit-scrollbar-track {\n      box-shadow: transparent;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: ${p => p.theme.colors.confirmationMedium};\n      border-radius: ${p => p.theme.radii.card};\n\n      :hover {\n        background-color: ${p => p.theme.colors.accentBackground};\n      }\n    }\n  }\n\n  .selector__option {\n    color: ${p => p.theme.colors.primaryText};\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n\n  .selector__option--is-focused {\n    color: ${p => p.theme.colors.secondaryText};\n    background: ${p => p.theme.colors.confirmationLight};\n  }\n\n  .selector__option--is-selected {\n    color: ${p => p.theme.colors.accentText};\n    background: ${p => p.theme.colors.primaryGradient};\n  }\n`;\n","import type { GroupBase, Props } from 'react-select';\nimport { StyledSelector } from './Selector.styled';\n\nexport default function Selector<\n  Option,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(props: Props<Option, IsMulti, Group>) {\n  return <StyledSelector {...props} classNamePrefix=\"selector\" />;\n}\n","import Selector from 'components/Selector';\nimport type { ISelector } from 'helpers/types';\n\nconst SORT = [\n  { value: '', label: 'Спочатку нові' },\n  { value: 'asc', label: 'Спочатку старі' },\n];\n\nexport default function SortSelector({ onChange }: ISelector) {\n  return <Selector options={SORT} onChange={onChange} defaultValue={SORT[0]} />;\n}\n","import { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppDispatch } from 'hooks';\nimport { updateResumeViews, updateResumeIsFavorite } from 'redux/resumes';\nimport type { IResumeEntity } from 'helpers/types';\nimport CardWrapperMarkup from 'components/CardWrapperMarkup';\nimport CardTitleStringMarkup from 'components/CardTitleStringMarkup';\nimport CardDetailStringMarkup from 'components/CardDetailStringMarkup';\nimport ItemLink from 'components/ItemLink';\nimport Box from 'components/Box';\nimport FavoriteButton from 'components/FavoriteButton';\n\nexport default function ResumeCard({\n  _id,\n  name,\n  position,\n  comment,\n  isFavorite,\n  isReviewed,\n}: IResumeEntity) {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const location = useLocation();\n\n  const handleUpdateViews = () => {\n    if (!isReviewed) {\n      dispatch(updateResumeViews(_id));\n    }\n  };\n\n  const clickHandler = (event: React.MouseEvent) => {\n    if (\n      !(event.target instanceof HTMLAnchorElement) &&\n      !(event.target instanceof HTMLButtonElement)\n    ) {\n      handleUpdateViews();\n      navigate(`${_id}${location.search}`, { state: location });\n    }\n    return;\n  };\n\n  return (\n    <CardWrapperMarkup onClick={() => clickHandler}>\n      {!isReviewed && <CardDetailStringMarkup value=\"New!!!\" />}\n      <CardTitleStringMarkup value={name} />\n      <CardDetailStringMarkup title=\"Позиція\" value={position} />\n      <CardDetailStringMarkup title=\"Коментар\" value={comment} />\n      <Box display=\"flex\" justifyContent=\"center\" gridGap={2}>\n        <FavoriteButton\n          isFavorite={isFavorite}\n          onClick={() => dispatch(updateResumeIsFavorite(_id))}\n        />\n        <ItemLink type=\"remove\" navigateTo={`${_id}/confirm`} />\n      </Box>\n    </CardWrapperMarkup>\n  );\n}\n","import { useAppSelector } from 'hooks';\nimport { selectResumes } from 'redux/resumes';\nimport ResumeCard from 'components/ResumeCard';\nimport GalleryWrapper from 'components/GalleryWrapper';\nimport CardPlaceholder from 'components/CardPlaceholder';\n\nexport default function ResumesGallery() {\n  const resumes = useAppSelector(selectResumes);\n\n  return (\n    <GalleryWrapper>\n      {resumes.length ? (\n        resumes.map(resume => <ResumeCard key={resume._id} {...resume} />)\n      ) : (\n        <CardPlaceholder />\n      )}\n    </GalleryWrapper>\n  );\n}\n","import React from 'react';\nimport * as Yup from 'yup';\nimport { fileFormat, fileSize } from 'utils';\n\nexport const resumeShema = (fileField: React.RefObject<HTMLInputElement>) =>\n  Yup.object({\n    name: Yup.string().trim().min(2).max(62).required(),\n    phone: Yup.string()\n      .trim()\n      .matches(\n        /^\\+380\\d{9}$/,\n        'Phone should containe +380 and another 9 numbers'\n      )\n      .required(),\n    email: Yup.string()\n      .trim()\n      .matches(\n        /^(\\w+([.-]?\\w+){1,})*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/,\n        'Поле електронної пошти повинно містити тільки: латинські літери, цифри та знаки, на початку або в кінці електронної пошти не може бути дефіс, перед (@) повинно бути не менше 2 символів.'\n      )\n      .required(),\n    position: Yup.string()\n      .trim()\n      // TODO:  discus about validation of position field\n      .matches(\n        /^(?![-' ]+$)[a-zA-Zа-яА-ЯіІїЇєЄ0-9-'‘ʼ,./ ]+$/,\n        'Поле позиції повинно містити тільки: латинські літери, цифри, дефіси та апостроф'\n      )\n      .min(5)\n      .max(30)\n      .required(),\n    resume: Yup.mixed()\n      .test(\n        'is-corrent-forat',\n        'Резюме повине буди в форматі pdf',\n        fileFormat(fileField, ['pdf'])\n      )\n      .test(\n        'is-correct-size',\n        'Розмір файлу не повинен перевищувати 5Mb',\n        fileSize(fileField, 5)\n      ),\n    comment: Yup.string().trim().min(2).max(2000).required(),\n    agreement: Yup.bool()\n      .oneOf([true], 'Agreement should be checked')\n      .required(),\n  });\n","import { useRef, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { createResume } from 'redux/resumes';\nimport { getAllVacancyTitles, selectVacancyTitles } from 'redux/vacancies';\nimport { resumeShema } from 'helpers/schemas/resumes';\nimport UploadFileField from 'components/UploadFileField';\n\ninterface IProps {\n  onSubmit?: () => void;\n}\n\nexport default function ResumeForm({ onSubmit }: IProps) {\n  const fileField = useRef<HTMLInputElement>(null);\n  const vacancies = useAppSelector(selectVacancyTitles);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getAllVacancyTitles());\n  }, [dispatch]);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        phone: '+380',\n        email: '',\n        position: '',\n        resume: '',\n        comment: '',\n        agreement: false,\n      }}\n      validationSchema={resumeShema(fileField)}\n      onSubmit={(\n        { name, phone, email, position, comment, agreement },\n        action\n      ) => {\n        dispatch(\n          createResume({\n            name,\n            phone,\n            email,\n            position,\n            comment,\n            agreement,\n            resume: fileField.current?.files\n              ? fileField.current?.files[0]\n              : null,\n          })\n        );\n        action.resetForm();\n        if (onSubmit) {\n          onSubmit();\n        }\n      }}\n    >\n      {({ values, setFieldValue }) => (\n        <Form>\n          <label>\n            Name: <Field id=\"name\" name=\"name\" type=\"text\" />\n            <ErrorMessage name=\"name\" />\n          </label>\n          <br />\n          <label>\n            Phone: <Field id=\"phone\" name=\"phone\" type=\"text\" />\n            <ErrorMessage name=\"phone\" />\n          </label>\n          <br />\n          <label>\n            Email: <Field id=\"email\" name=\"email\" type=\"email\" />\n            <ErrorMessage name=\"email\" />\n          </label>\n          <br />\n          <label>\n            Position:\n            <select\n              name=\"position\"\n              id=\"position\"\n              value={values.position}\n              onChange={event => setFieldValue('position', event.target.value)}\n            >\n              <option value=\"\">Оберіть вакансію</option>\n              {vacancies.map(({ _id, title }) => (\n                <option key={_id} value={title}>\n                  {title}\n                </option>\n              ))}\n              <option value=\"other\">Інше</option>\n            </select>\n            <ErrorMessage name=\"position\" />\n          </label>\n          <br />\n          <UploadFileField name=\"resume\" fileRef={fileField} />\n          <br />\n          <label>\n            Comment: <Field id=\"comment\" name=\"comment\" type=\"text\" />\n            <ErrorMessage name=\"comment\" />\n          </label>\n          <br />\n          <label>\n            Agreement: <Field id=\"agreement\" name=\"agreement\" type=\"checkbox\" />\n            <ErrorMessage name=\"agreement\" />\n          </label>\n          <br />\n          <button type=\"submit\" disabled={!values.agreement}>\n            Add resume\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { selectVacancyTitles, getAllVacancyTitles } from 'redux/vacancies';\nimport Selector from 'components/Selector';\nimport type { ISelector } from 'helpers/types';\n\nexport default function VacancySelector({ onChange }: ISelector) {\n  const titles = useAppSelector(selectVacancyTitles);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getAllVacancyTitles());\n  }, [dispatch]);\n\n  const positionOptions = [\n    { value: '', label: 'Всі' },\n    ...titles.map(({ title }) => ({ value: title, label: title })),\n    { value: 'Інші', label: 'Інші' },\n  ];\n\n  return (\n    <Selector\n      options={positionOptions}\n      defaultValue={{ value: '', label: 'Всі' }}\n      onChange={onChange}\n    />\n  );\n}\n","import Selector from 'components/Selector';\nimport type { ISelector } from 'helpers/types';\n\nconst LIMIT = [\n  { value: '2', label: '2' },\n  { value: '5', label: '5' },\n  { value: '10', label: '10' },\n  { value: '15', label: '15' },\n  { value: '', label: '20' },\n  { value: '25', label: '25' },\n  { value: '30', label: '30' },\n  { value: '40', label: '40' },\n  { value: '50', label: '50' },\n];\n\nexport default function LimitSelector({ onChange }: ISelector) {\n  return (\n    <Selector options={LIMIT} defaultValue={LIMIT[4]} onChange={onChange} />\n  );\n}\n","import Box from 'components/Box';\nimport VacancySelector from 'components/VacancySelector';\nimport SortSelector from 'components/SortSelector';\nimport LimitSelector from 'components/LimitSelector';\nimport type { IResumeFilter } from 'helpers/types';\n\ninterface IProps {\n  filterStatus: IResumeFilter;\n  onSelect: React.Dispatch<React.SetStateAction<IResumeFilter>>;\n}\n\nexport default function ResumesFilter({ filterStatus, onSelect }: IProps) {\n  return (\n    <Box display=\"flex\" flexDirection={['column', 'column', 'row']} gridGap={4}>\n      <label>\n        Показати обрані\n        <input\n          type=\"checkbox\"\n          name=\"isFavorite\"\n          checked={filterStatus?.isFavorite ? true : false}\n          onChange={({ target }) =>\n            onSelect(({ isFavorite, ...rest }) => ({\n              ...rest,\n              ...(target.checked ? { isFavorite: true } : null),\n            }))\n          }\n        />\n      </label>\n      <VacancySelector\n        onChange={option => {\n          onSelect(({ position, ...rest }) => ({\n            ...rest,\n            ...(option?.value ? { position: option.value } : null),\n          }));\n        }}\n      />\n      <SortSelector\n        onChange={option => {\n          onSelect(({ sort, ...rest }) => ({\n            ...rest,\n            ...(option?.value ? { sort: option.value } : null),\n          }));\n        }}\n      />\n      <LimitSelector\n        onChange={option => {\n          onSelect(({ limit, ...rest }) => ({\n            ...rest,\n            ...(option?.value ? { limit: option.value } : null),\n          }));\n        }}\n      />\n    </Box>\n  );\n}\n","import { Suspense, useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { useAppSelector, useModal, useAppDispatch } from 'hooks';\nimport {\n  getAllResumes,\n  selectResumeError,\n  selectResumes,\n  selectResumePagination,\n  loadMoreResumes,\n} from 'redux/resumes';\nimport type { IResumeFilter } from 'helpers/types';\nimport ResumesGallery from 'components/ResumesGallery';\nimport Modal from 'components/Modal';\nimport ResumeForm from 'components/ResumeForm';\nimport ResumesFilter from 'components/ResumesFilter';\nimport Loader from 'components/Loader';\nimport PageTitle from 'components/PageTitle';\nimport CreateButton from 'components/CreateButton';\nimport GalleryWrapper from 'components/GalleryWrapper';\nimport CardPlaceholder from 'components/CardPlaceholder';\nimport FilterWrapper from 'components/FilterWrapper';\nimport LoadMoreButton from 'components/LoadMoreButton';\n\nexport default function ResumesPage() {\n  const { isModalOpen, openModal, closeModal } = useModal();\n  const [filterStatus, setFilterStatus] = useState<IResumeFilter>({});\n  const resumes = useAppSelector(selectResumes);\n  const pagination = useAppSelector(selectResumePagination);\n  const error = useAppSelector(selectResumeError);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getAllResumes(filterStatus));\n  }, [dispatch, filterStatus]);\n\n  if (error) {\n    Notify.failure(error);\n    return (\n      <>\n        <PageTitle title=\"Резюме\" />\n        <GalleryWrapper>\n          <CardPlaceholder title=\"It seems like:\" description={error} />\n        </GalleryWrapper>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Резюме\" />\n      <FilterWrapper>\n        <ResumesFilter filterStatus={filterStatus} onSelect={setFilterStatus} />\n      </FilterWrapper>\n      <ResumesGallery />\n      {resumes.length < pagination.total ? (\n        <LoadMoreButton\n          onClick={() =>\n            dispatch(\n              loadMoreResumes({\n                ...filterStatus,\n                skip: pagination.skip + pagination.limit,\n              })\n            )\n          }\n        />\n      ) : null}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      <CreateButton onClick={openModal} />\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <ResumeForm onSubmit={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"names":["LoadMoreButton","_ref","onClick","_jsx","Button","variant","type","mx","children","TitleWrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","props","colors","primaryGradient","radii","pageTitle","devices","Title","_templateObject2","accentText","fontSizes","xl","xxl","PageTitle","title","useEffect","document","StyledSelector","Select","m","fontWeights","medium","confirmation","secondaryText","shadows","selector","accentBackground","confirmationMedium","card","primaryText","confirmationLight","Selector","_objectSpread","classNamePrefix","SORT","value","label","SortSelector","onChange","options","defaultValue","ResumeCard","_id","name","position","comment","isFavorite","isReviewed","navigate","useNavigate","dispatch","useAppDispatch","location","useLocation","clickHandler","event","target","HTMLAnchorElement","HTMLButtonElement","updateResumeViews","concat","search","state","_jsxs","CardWrapperMarkup","CardDetailStringMarkup","CardTitleStringMarkup","Box","display","justifyContent","gridGap","FavoriteButton","updateResumeIsFavorite","ItemLink","navigateTo","ResumesGallery","resumes","useAppSelector","selectResumes","GalleryWrapper","length","map","resume","CardPlaceholder","resumeShema","fileField","Yup","trim","min","max","required","phone","matches","email","test","fileFormat","fileSize","agreement","oneOf","ResumeForm","onSubmit","useRef","vacancies","selectVacancyTitles","getAllVacancyTitles","Formik","initialValues","validationSchema","_ref2","action","_fileField$current","_fileField$current2","createResume","current","files","resetForm","_ref3","values","setFieldValue","Form","Field","id","ErrorMessage","_ref4","UploadFileField","fileRef","disabled","VacancySelector","titles","positionOptions","_toConsumableArray","LIMIT","LimitSelector","ResumesFilter","filterStatus","onSelect","flexDirection","checked","rest","_objectWithoutProperties","_excluded","option","_excluded2","_ref5","sort","_excluded3","_ref6","limit","_excluded4","ResumesPage","_useModal","useModal","isModalOpen","openModal","closeModal","_useState","useState","_useState2","_slicedToArray","setFilterStatus","pagination","selectResumePagination","error","selectResumeError","getAllResumes","Notify","_Fragment","description","FilterWrapper","total","loadMoreResumes","skip","Suspense","fallback","Loader","Outlet","CreateButton","Modal","onClose"],"sourceRoot":""}