{"version":3,"file":"static/js/872.22f413b7.chunk.js","mappings":"yPAae,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,GAA6BC,EAAAA,EAAAA,IAAeC,EAAAA,IAApCC,EAAKH,EAALG,MAAOC,EAASJ,EAATI,UACfC,GAAsCC,EAAAA,EAAAA,MAA9BC,EAAYF,EAAZE,aAAcC,EAAWH,EAAXG,YACtBC,GAAoCC,EAAAA,EAAAA,KAAS,GAArCC,EAAWF,EAAXE,YAAaC,EAAUH,EAAVG,WAWrB,OATAC,EAAAA,EAAAA,YAAU,WAIR,OAHIL,GACFV,GAASgB,EAAAA,EAAAA,IAAkBN,IAEtB,WACLV,GAASiB,EAAAA,EAAAA,MACX,CACF,GAAG,CAACP,EAAaV,IAEbK,GACFa,EAAAA,OAAAA,QAAeb,IACRc,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAE,cAAAC,OAAgBb,GAAgB,IAAMc,SAAO,MAIhEJ,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CACJX,YAAaA,EACbY,QAAS,WACPX,IACAY,YAAW,WACT5B,EAAS,cAADwB,OAAeb,GAAgB,IACzC,GAAG,IACL,EAAEkB,SAEDrB,GAAYa,EAAAA,EAAAA,KAACS,EAAAA,EAAM,KAAMT,EAAAA,EAAAA,KAACU,EAAAA,GAAM,KAGvC,C","sources":["components/VacanciesModalLayout/VacanciesModalLayout.tsx"],"sourcesContent":["import { Navigate, Outlet, useNavigate, useParams } from 'react-router-dom';\nimport Modal from 'components/Modal/';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport {\n  getCertainVacancy,\n  removeCertainVacancy,\n  selectVacancies,\n} from 'redux/vacancies';\nimport { useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { Notify } from 'notiflix';\nimport { useModal } from 'hooks';\n\nexport default function VacanciesModalLayout() {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const { error, isLoading } = useAppSelector(selectVacancies);\n  const { categoryName, vacanciesId } = useParams();\n  const { isModalOpen, closeModal } = useModal(true);\n\n  useEffect(() => {\n    if (vacanciesId) {\n      dispatch(getCertainVacancy(vacanciesId));\n    }\n    return () => {\n      dispatch(removeCertainVacancy());\n    };\n  }, [vacanciesId, dispatch]);\n\n  if (error) {\n    Notify.failure(error);\n    return <Navigate to={`/vacancies/${categoryName || ''}`} replace />;\n  }\n\n  return (\n    <Modal\n      isModalOpen={isModalOpen}\n      onClose={() => {\n        closeModal();\n        setTimeout(() => {\n          navigate(`/vacancies/${categoryName || ''}`);\n        }, 250);\n      }}\n    >\n      {isLoading ? <Loader /> : <Outlet />}\n    </Modal>\n  );\n}\n"],"names":["VacanciesModalLayout","navigate","useNavigate","dispatch","useAppDispatch","_useAppSelector","useAppSelector","selectVacancies","error","isLoading","_useParams","useParams","categoryName","vacanciesId","_useModal","useModal","isModalOpen","closeModal","useEffect","getCertainVacancy","removeCertainVacancy","Notify","_jsx","Navigate","to","concat","replace","Modal","onClose","setTimeout","children","Loader","Outlet"],"sourceRoot":""}