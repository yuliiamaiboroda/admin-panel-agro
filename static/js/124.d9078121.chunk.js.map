{"version":3,"file":"static/js/124.d9078121.chunk.js","mappings":"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","sources":["components/ModalLogout/ModalLogout.tsx","components/PageTitle/PageTitle.styled.ts","components/PageTitle/PageTitle.tsx","components/ResetPasswordButton/ResetPasswordButton.tsx","helpers/schemas/auth/updatePassword.schema.ts","components/ModalChangePassword/ModalChangePassword.tsx","pages/ProfilePage/ProfilePage.styled.ts","pages/ProfilePage/ProfilePage.tsx"],"sourcesContent":["import React from 'react';\nimport ConfirmationModal from 'components/ConfirmationModal';\n\ninterface IProps {\n  onClose: () => void;\n  handleLogout: () => void;\n}\n\nexport default function ModalLogout({ onClose, handleLogout }: IProps) {\n  return (\n    <ConfirmationModal\n      title={`Ви дійсно хочете вийти?`}\n      onCancel={onClose}\n      onConfirm={handleLogout}\n    />\n  );\n}\n","import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  height: 100px;\n  display: flex;\n  align-items: center;\n  padding: ${p => p.theme.space[6]}px ${p => p.theme.space[8]}px;\n  background: ${props => props.theme.colors.primaryGradient};\n  border-radius: ${props => props.theme.radii.pageTitle};\n\n  @media ${devices.tablet} {\n    height: 150px;\n  }\n\n  @media ${devices.desktop} {\n    height: 234px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.colors.accentText};\n  font-size: ${props => props.theme.fontSizes.xl};\n\n  @media ${devices.desktop} {\n    font-size: ${props => props.theme.fontSizes.xxl};\n  }\n`;\n","import { Title, TitleWrapper } from './PageTitle.styled';\nimport { useEffect } from 'react';\n\ninterface IProps {\n  title: string;\n}\n\nexport default function PageTitle({ title }: IProps) {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  return (\n    <TitleWrapper>\n      <Title>{title}</Title>\n    </TitleWrapper>\n  );\n}\n","import { useAppDispatch } from 'hooks';\nimport { restorePasswordViaEmail } from 'redux/users';\nimport { MdUpdate } from 'react-icons/md';\nimport { Button } from 'helpers/styles';\n\ninterface IProps {\n  email: string;\n}\n\nexport default function ResetPasswordButton({ email }: IProps) {\n  const dispatch = useAppDispatch();\n\n  const handleClick = () => {\n    dispatch(restorePasswordViaEmail(email));\n  };\n  return (\n    <Button type=\"button\" onClick={handleClick} variant=\"content\">\n      <MdUpdate size={24} /> Забули пароль?\n    </Button>\n  );\n}\n","import * as Yup from 'yup';\n\nconst updatePasswordSchema = Yup.object().shape({\n  oldPassword: Yup.string()\n    .required()\n    .min(7, 'Пароль занадто короткий - має містити мінімум 7 символів.')\n    .max(32, 'Пароль занадто довгий - має містити максимум 32 символи.')\n    .required(\"Це поле є обов'язковим\")\n    .matches(\n      /^\\d*(?=.*[a-z])(?=.*[A-Z])\\S+\\D*\\d*$/,\n      'Пароль має містити лише: великі літери латиницею, маленькі літери латиницею та цифри'\n    ),\n  newPassword: Yup.string()\n  .required(\"Це поле є обов'язковим\")\n  .min(7, 'Пароль занадто короткий - має містити мінімум 7 символів.')\n    .max(32, 'Пароль занадто довгий - має містити максимум 32 символи.')\n    .matches(\n      /^\\d*(?=.*[a-z])(?=.*[A-Z])\\S+\\D*\\d*$/,\n      'Пароль має містити лише: великі літери латиницею, маленькі літери латиницею та цифри'\n    ),\n  confirmPassword: Yup.string()\n  .required(\"Це поле є обов'язковим\")\n  .oneOf([Yup.ref('newPassword'), ''], 'Паролі мають співпадати!'),\n});\n\nexport default updatePasswordSchema;\n","import { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { RxEyeClosed, RxEyeOpen } from 'react-icons/rx';\nimport { Formik, Form } from 'formik';\nimport { updatePasswordById } from 'redux/users';\nimport updatePasswordSchema from 'helpers/schemas/auth/updatePassword.schema';\nimport FormField from 'components/FormField';\nimport Box from 'components/Box';\nimport { Button } from 'helpers/styles';\nimport FormButtons from 'components/FormButtons';\nimport ResetPasswordButton from 'components/ResetPasswordButton';\nimport { selectUser } from 'redux/user';\n\ninterface IProps {\n  onClose: () => void;\n}\n\nexport default function ModalChangePassword({ onClose }: IProps) {\n  const [isVisibleOldPassword, setIsVisibleOldPassword] = useState(false);\n  const [isVisibleNewPassword, setIsVisibleNewPassword] = useState(false);\n  const [isVisibleConfirmPassword, setIsVisibleConfirmPassword] =\n    useState(false);\n  const dispatch = useAppDispatch();\n  const { user } = useAppSelector(selectUser);\n\n  const initialState = {\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n  };\n\n  return (\n    <>\n      <h2>Змінити пароль</h2>\n      <div style={{ margin: '14px auto' }}>\n        <Formik\n          initialValues={initialState}\n          validationSchema={updatePasswordSchema}\n          onSubmit={(values, actions) => {\n            const { oldPassword, newPassword } = values;\n            dispatch(updatePasswordById({ oldPassword, newPassword }));\n            actions.resetForm();\n            onClose();\n          }}\n        >\n          {({ handleSubmit, setFieldValue }) => (\n            <Form\n              style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}\n            >\n              <Box position=\"relative\" width=\"100%\">\n                <FormField\n                  labelName=\"Старий пароль:\"\n                  placeholderName=\"Старий пароль\"\n                  fieldName=\"oldPassword\"\n                  typeName={isVisibleOldPassword ? 'text' : 'password'}\n                />\n                <Button\n                  type=\"button\"\n                  position=\"absolute\"\n                  right=\"0\"\n                  bottom=\"0\"\n                  onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n                    setIsVisibleOldPassword(!isVisibleOldPassword)\n                  }\n                  variant=\"content\"\n                >\n                  {isVisibleOldPassword ? (\n                    <RxEyeClosed size={22} />\n                  ) : (\n                    <RxEyeOpen size={22} />\n                  )}\n                </Button>\n              </Box>\n              <Box position=\"relative\" width=\"100%\">\n                <FormField\n                  labelName=\"Новий пароль:\"\n                  placeholderName=\"Новий пароль:\"\n                  fieldName=\"newPassword\"\n                  typeName={isVisibleNewPassword ? 'text' : 'password'}\n                />\n                <Button\n                  type=\"button\"\n                  position=\"absolute\"\n                  right=\"0\"\n                  bottom=\"0\"\n                  onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n                    setIsVisibleNewPassword(!isVisibleNewPassword)\n                  }\n                  variant=\"content\"\n                >\n                  {isVisibleNewPassword ? (\n                    <RxEyeClosed size={22} />\n                  ) : (\n                    <RxEyeOpen size={22} />\n                  )}\n                </Button>\n              </Box>\n              <Box position=\"relative\" width=\"100%\">\n                <FormField\n                  labelName=\"Підтвердити новий пароль:\"\n                  placeholderName=\"Підтвердити новий пароль:\"\n                  fieldName=\"confirmPassword\"\n                  typeName={isVisibleConfirmPassword ? 'text' : 'password'}\n                />\n                <Button\n                  type=\"button\"\n                  position=\"absolute\"\n                  right=\"0\"\n                  bottom=\"0\"\n                  variant=\"content\"\n                  onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n                    setIsVisibleConfirmPassword(!isVisibleConfirmPassword)\n                  }\n                >\n                  {isVisibleConfirmPassword ? (\n                    <RxEyeClosed size={22} />\n                  ) : (\n                    <RxEyeOpen size={22} />\n                  )}\n                </Button>\n              </Box>\n              <FormButtons\n                onCancel={onClose}\n                onSubmit={handleSubmit}\n                submitButtonText=\"Змінити пароль\"\n              />\n            </Form>\n          )}\n        </Formik>\n        {user.email ? <ResetPasswordButton email={user.email} /> : null}\n      </div>\n    </>\n  );\n}\n","import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const CardCentred = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const CardWrapper = styled.div`\n  width: 300px;\n  margin-top: ${props => props.theme.space[3]}px;\n  padding: ${props => props.theme.space[3]}px ${props => props.theme.space[3]}px;\n  border-radius: ${props => props.theme.radii.card};\n  box-shadow: ${props => props.theme.shadows.card};\n  background-color: ${props => props.theme.colors.primaryBackground};\n\n  @media ${devices.tablet} {\n    width: 410px;\n    margin-top: -${props => props.theme.space[4]}px;\n    padding: ${props => props.theme.space[6]}px\n      ${props => props.theme.space[3]}px;\n  }\n\n  @media ${devices.desktop} {\n    margin-top: -${props => props.theme.space[7]}px;\n  }\n`;\n\nexport const Details = styled.p`\n  margin-bottom: ${props => props.theme.space[3]}px;\n  font-size: ${props => props.theme.fontSizes.m};\n`;\n","import { useAppSelector, useAppDispatch } from 'hooks';\nimport { logoutUser, selectUser } from 'redux/user';\nimport { AiOutlineLogout, AiOutlineSetting } from 'react-icons/ai';\nimport { useState } from 'react';\nimport { Roles } from 'helpers/constants';\nimport Modal from 'components/Modal/Modal';\nimport ModalLogout from 'components/ModalLogout/ModalLogout';\nimport translateRole from 'utils/translate-role';\nimport ModalChangePassword from 'components/ModalChangePassword';\nimport PageTitle from 'components/PageTitle';\nimport { Button } from 'helpers/styles';\nimport { CardWrapper, CardCentred, Details } from './ProfilePage.styled';\nimport Box from 'components/Box';\n\nexport default function ProfilePage() {\n  const [isLogoutModalOpen, setIsLogoutModalOpen] = useState(false);\n  const [isChangePassModalOpen, setIsChangePassModalOpen] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const {\n    user: { name, surname, role, email },\n  } = useAppSelector(selectUser);\n  return (\n    <>\n      <PageTitle title=\"Ваші особисті дані\" />\n      <CardCentred>\n        <CardWrapper>\n          <Details>\n            <b>Ім'я: </b>\n            {name} {surname}\n          </Details>\n          <Details>\n            <b>Роль: </b>\n            {role && translateRole(Roles[role])}\n          </Details>\n          <Details>\n            <b>Пошта: </b>\n            {email}\n          </Details>\n          <Box mt={4} display=\"flex\" justifyContent=\"center\" gridGap={2}>\n            <Button\n              type=\"button\"\n              onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n                setIsChangePassModalOpen(true)\n              }\n              variant=\"primary\"\n              width={[132, 188]}\n            >\n              <AiOutlineSetting size={24} />\n              <Box display={['none', 'block']}>Змінити пароль</Box>\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n                setIsLogoutModalOpen(true)\n              }\n              variant=\"secondary\"\n              width={[132, 188]}\n            >\n              <AiOutlineLogout size={24} />\n              <Box display={['none', 'block']}>Вихід з аккаунту</Box>\n            </Button>\n          </Box>\n        </CardWrapper>\n      </CardCentred>\n\n      <Modal\n        isModalOpen={isChangePassModalOpen}\n        onClose={() => setIsChangePassModalOpen(false)}\n      >\n        <ModalChangePassword onClose={() => setIsChangePassModalOpen(false)} />\n      </Modal>\n      <Modal\n        isModalOpen={isLogoutModalOpen}\n        onClose={() => setIsLogoutModalOpen(false)}\n      >\n        <ModalLogout\n          onClose={() => setIsLogoutModalOpen(false)}\n          handleLogout={() => dispatch(logoutUser())}\n        />\n      </Modal>\n    </>\n  );\n}\n"],"names":["ModalLogout","_ref","onClose","handleLogout","_jsx","ConfirmationModal","title","onCancel","onConfirm","TitleWrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","props","colors","primaryGradient","radii","pageTitle","devices","Title","_templateObject2","accentText","fontSizes","xl","xxl","PageTitle","useEffect","document","children","ResetPasswordButton","email","dispatch","useAppDispatch","_jsxs","Button","type","onClick","restorePasswordViaEmail","variant","MdUpdate","size","Yup","shape","oldPassword","required","min","max","matches","newPassword","confirmPassword","oneOf","ModalChangePassword","_useState","useState","_useState2","_slicedToArray","isVisibleOldPassword","setIsVisibleOldPassword","_useState3","_useState4","isVisibleNewPassword","setIsVisibleNewPassword","_useState5","_useState6","isVisibleConfirmPassword","setIsVisibleConfirmPassword","user","useAppSelector","selectUser","_Fragment","style","margin","Formik","initialValues","validationSchema","updatePasswordSchema","onSubmit","values","actions","updatePasswordById","resetForm","_ref2","handleSubmit","setFieldValue","Form","display","flexDirection","gap","Box","position","width","FormField","labelName","placeholderName","fieldName","typeName","right","bottom","e","RxEyeClosed","RxEyeOpen","FormButtons","submitButtonText","CardCentred","CardWrapper","card","shadows","primaryBackground","Details","_templateObject3","m","ProfilePage","isLogoutModalOpen","setIsLogoutModalOpen","isChangePassModalOpen","setIsChangePassModalOpen","_useAppSelector$user","name","surname","role","translateRole","Roles","mt","justifyContent","gridGap","AiOutlineSetting","AiOutlineLogout","Modal","isModalOpen","logoutUser"],"sourceRoot":""}