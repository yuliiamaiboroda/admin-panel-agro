{"version":3,"file":"static/js/386.62c93f35.chunk.js","mappings":"sOA4BA,EA1BoBA,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KACJG,IACC,GACA,qVAEDC,IACC,GACA,+UAEDF,MAAM,yFACNG,QACC,mDACA,wRAEDC,SAAS,yMACZC,SAAUP,EAAAA,KACPG,IAAI,EAAG,mSACPC,IAAI,GAAI,8RACRC,QACC,uCACA,6UAEDC,SAAS,oJ,mBCbRE,EAAsC,CAAEN,MAAO,GAAIK,SAAU,IAEpD,SAASE,IACtB,IAAAC,GAAkDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DI,EAAiBF,EAAA,GAAEG,EAAoBH,EAAA,GACxCI,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,OAAQ,YAAaC,MAAO,eAAgBC,UACxDJ,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CACLC,cAAehB,EACfiB,SARmB,SAACC,EAAyBC,GACjDX,GAASY,EAAAA,EAAAA,IAAUF,GACrB,EAOMG,gBAAc,EACdC,iBAAkBC,EAAYT,UAE9BU,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAX,SAAA,EACHU,EAAAA,EAAAA,MAAA,SAAAV,SAAA,CAAO,gGAELJ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,QAAQC,YAAY,oBAC7CnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAY,CAACH,KAAK,cAErBjB,EAAAA,EAAAA,KAAA,UACAc,EAAAA,EAAAA,MAAA,SAAAV,SAAA,CAAO,yCAELJ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,KAAK,WACLC,KAAMtB,EAAoB,OAAS,cAErCI,EAAAA,EAAAA,KAAA,UACEkB,KAAK,SACLG,QAAS,kBAAMxB,GAAsBD,EAAkB,EAACQ,SAEvDR,GAAoBI,EAAAA,EAAAA,KAACsB,EAAAA,IAAW,KAAMtB,EAAAA,EAAAA,KAACuB,EAAAA,IAAS,OAEnDvB,EAAAA,EAAAA,KAACoB,EAAAA,GAAY,CAACH,KAAK,iBAErBjB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQkB,KAAK,SAAQd,SAAC,+CAKhC,CCzDe,SAASoB,IACtB,OAAOxB,EAAAA,EAAAA,KAACT,EAAS,GACnB,C","sources":["helpers/schemas/auth/login.schema.ts","components/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(\n      10,\n      'Електронна пошта занадто коротка - має містити мінімум 10 символів.'\n    )\n    .max(\n      63,\n      'Електронна пошта занадто довга - має містити максимум 63 символів.'\n    )\n    .email('Невалідна пошта')\n    .matches(\n      /^(\\w+([.-]?\\w+){1,})*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/,\n      'Будь ласка введіть валідну адресу електронної пошти'\n    )\n    .required(\"Електронна пошта є обов'язковим полем\"),\n  password: Yup.string()\n    .min(7, 'Пароль занадто короткий - має містити мінімум 7 символів.')\n    .max(32, 'Пароль занадтно довгий - має містити максимум 32 символи.')\n    .matches(\n      /^\\d*(?=.*[a-z])(?=.*[A-Z])\\S+\\D*\\d*$/,\n      'Пароль має містити лише: великі літери, маленькі літери та цифри'\n    )\n    .required(\"Пароль є обов'язковим полем\"),\n});\n\nexport default loginSchema;\n","import React, { useState } from 'react';\nimport { useAppDispatch } from 'hooks';\nimport { loginUser } from 'redux/user';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport loginSchema from 'helpers/schemas/auth/login.schema';\nimport { RxEyeClosed, RxEyeOpen } from 'react-icons/rx';\n\ninterface LoginFormValues {\n  email: string;\n  password: string;\n}\n\nconst FORM_INITIAL_STATE: LoginFormValues = { email: '', password: '' };\n\nexport default function LoginForm() {\n  const [isVisiblePassword, setIsVisiblePassword] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const handleSubmitForm = (values: LoginFormValues, actions: any) => {\n    dispatch(loginUser(values));\n  };\n\n  return (\n    <div style={{ margin: '20px auto', width: 'fit-content' }}>\n      <Formik\n        initialValues={FORM_INITIAL_STATE}\n        onSubmit={handleSubmitForm}\n        validateOnBlur\n        validationSchema={loginSchema}\n      >\n        <Form>\n          <label>\n            Електронна пошта:\n            <br />\n            <Field name=\"email\" type=\"email\" placeholder=\"hello@mail.com\" />\n            <ErrorMessage name=\"email\" />\n          </label>\n          <br />\n          <label>\n            Пароль:\n            <br />\n            <Field\n              name=\"password\"\n              type={isVisiblePassword ? 'text' : 'password'}\n            />\n            <button\n              type=\"button\"\n              onClick={() => setIsVisiblePassword(!isVisiblePassword)}\n            >\n              {isVisiblePassword ? <RxEyeClosed /> : <RxEyeOpen />}\n            </button>\n            <ErrorMessage name=\"password\" />\n          </label>\n          <br />\n          <button type=\"submit\">Увійти</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","import LoginForm from 'components/LoginForm';\n\nexport default function LoginPage() {\n  return <LoginForm />;\n}\n"],"names":["Yup","shape","email","min","max","matches","required","password","FORM_INITIAL_STATE","LoginForm","_useState","useState","_useState2","_slicedToArray","isVisiblePassword","setIsVisiblePassword","dispatch","useAppDispatch","_jsx","style","margin","width","children","Formik","initialValues","onSubmit","values","actions","loginUser","validateOnBlur","validationSchema","loginSchema","_jsxs","Form","Field","name","type","placeholder","ErrorMessage","onClick","RxEyeClosed","RxEyeOpen","LoginPage"],"sourceRoot":""}