{"version":3,"file":"static/js/104.26adc0b5.chunk.js","mappings":"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","sources":["components/CardImageMarkup/CardImageMarkup.styled.ts","components/CardImageMarkup/CardImageMarkup.tsx","components/PageTitle/PageTitle.styled.ts","components/PageTitle/PageTitle.tsx","components/ProductCard/ProductCard.tsx","components/ProductsGallery/ProductsGallery.tsx","pages/ProductsPage/ProductsPage.tsx"],"sourcesContent":["import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 284px;\n  height: 172px;\n  margin-bottom: ${props => props.theme.space[2]}px;\n  object-fit: cover; //TODO  cover or contain?\n  \n  @media ${devices.tablet} { \n    width: 366px;\n    height: 222px;\n  }\n`;\n","import { Image } from './CardImageMarkup.styled';\n\ninterface IProps {\n  src: string;\n  alt: string;\n}\n\nexport default function CardImageMarkup({ src, alt }: IProps) {\n  return <Image src={src} alt={alt} width=\"348\" height=\"222\" />;\n}\n","import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  height: 100px;\n  display: flex;\n  align-items: center;\n  padding: ${p => p.theme.space[6]}px ${p => p.theme.space[8]}px;\n  background: ${props => props.theme.colors.primaryGradient};\n  border-radius: ${props => props.theme.radii.pageTitle};\n\n  @media ${devices.tablet} {\n    height: 150px;\n  }\n\n  @media ${devices.desktop} {\n    height: 234px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.colors.accentText};\n  font-size: ${props => props.theme.fontSizes.xl};\n\n  @media ${devices.desktop} {\n    font-size: ${props => props.theme.fontSizes.xxl};\n  }\n`;\n","import { Title, TitleWrapper } from './PageTitle.styled';\nimport { useEffect } from 'react';\n\ninterface IProps {\n  title: string;\n}\n\nexport default function PageTitle({ title }: IProps) {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  return (\n    <TitleWrapper>\n      <Title>{title}</Title>\n    </TitleWrapper>\n  );\n}\n","import { Roles } from 'helpers/constants';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport CardWrapperMarkup from 'components/CardWrapperMarkup';\nimport CardImageMarkup from 'components/CardImageMarkup';\nimport CardTitleStringMarkup from 'components/CardTitleStringMarkup';\nimport CardDetailStringMarkup from 'components/CardDetailStringMarkup';\nimport RestrictedComponent from 'components/RestrictedComponent';\nimport ItemLink from 'components/ItemLink';\nimport Box from 'components/Box';\n\ninterface IProps {\n  _id: string;\n  title: string;\n  imageURL: string;\n  description: string;\n}\n\nexport default function ProductCard({\n  _id,\n  title,\n  imageURL,\n  description,\n}: IProps) {\n  const navigate = useNavigate();\n  const routeLocation = useLocation();\n\n  const clickHandler = (event: React.MouseEvent) => {\n    if (!(event.target instanceof HTMLAnchorElement)) {\n      navigate(`${_id}`, { state: { from: routeLocation } });\n    }\n    return;\n  };\n\n  return (\n    <CardWrapperMarkup onClick={() => clickHandler}>\n      <CardImageMarkup src={imageURL} alt={title} />\n      <CardTitleStringMarkup value={title} />\n      <CardDetailStringMarkup title=\"Опис\" value={description} />\n      <RestrictedComponent accessRight={Roles.productsManager}>\n        <Box display=\"flex\" justifyContent=\"center\" gridGap={2}>\n          <ItemLink type=\"edit\" navigateTo={`${_id}/form`} />\n          <ItemLink type=\"remove\" navigateTo={`${_id}/confirm`} />\n        </Box>\n      </RestrictedComponent>\n    </CardWrapperMarkup>\n  );\n}\n","import { useAppSelector, useModal } from 'hooks';\nimport { selectProducts } from 'redux/products';\nimport ProductCard from 'components/ProductCard';\nimport Modal from 'components/Modal';\nimport ProductForm from 'components/ProductForm';\nimport { useAppDispatch } from 'hooks';\nimport { createProduct } from 'redux/products';\nimport { Roles } from 'helpers/constants';\nimport RestrictedComponent from 'components/RestrictedComponent';\nimport CreateButton from 'components/CreateButton';\nimport GalleryWrapper from 'components/GalleryWrapper';\nimport CardPlaceholder from 'components/CardPlaceholder';\n\nexport default function ProductsGallery() {\n  const products = useAppSelector(selectProducts);\n  const { isModalOpen, openModal, closeModal } = useModal();\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <GalleryWrapper>\n        {products.length ? (\n          products.map(product => (\n            <ProductCard key={product._id} {...product} />\n          ))\n        ) : (\n          <CardPlaceholder />\n        )}\n      </GalleryWrapper>\n      <RestrictedComponent accessRight={Roles.productsManager}>\n        <CreateButton onClick={openModal} />\n      </RestrictedComponent>\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <ProductForm\n            onSubmit={productData => {\n              dispatch(createProduct(productData));\n              closeModal();\n            }}\n            onCancel={() => closeModal()}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { useEffect, Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { getAllProducts, selectProductError } from 'redux/products';\nimport ProductsGallery from 'components/ProductsGallery';\nimport Loader from 'components/Loader';\nimport PageTitle from 'components/PageTitle';\nimport GalleryWrapper from 'components/GalleryWrapper';\nimport CardPlaceholder from 'components/CardPlaceholder';\n\nexport default function ProductsPage() {\n  const dispatch = useAppDispatch();\n  const error = useAppSelector(selectProductError);\n\n  useEffect(() => {\n    dispatch(getAllProducts());\n  }, [dispatch]);\n\n  if (error) {\n    Notify.failure(error);\n    return (\n      <>\n        <PageTitle title=\"Продукти компанії\" />\n        <GalleryWrapper>\n          <CardPlaceholder title=\"Ooops...\" description={`It seems like: ${error}`} />\n        </GalleryWrapper>\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <PageTitle title=\"Продукти компанії\" />\n      <ProductsGallery />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n"],"names":["Image","styled","_templateObject","_taggedTemplateLiteral","props","theme","space","devices","CardImageMarkup","_ref","src","alt","_jsx","width","height","TitleWrapper","p","colors","primaryGradient","radii","pageTitle","Title","_templateObject2","accentText","fontSizes","xl","xxl","PageTitle","title","useEffect","document","children","ProductCard","_id","imageURL","description","navigate","useNavigate","routeLocation","useLocation","clickHandler","event","target","HTMLAnchorElement","concat","state","from","_jsxs","CardWrapperMarkup","onClick","CardTitleStringMarkup","value","CardDetailStringMarkup","RestrictedComponent","accessRight","Roles","Box","display","justifyContent","gridGap","ItemLink","type","navigateTo","ProductsGallery","products","useAppSelector","selectProducts","_useModal","useModal","isModalOpen","openModal","closeModal","dispatch","useAppDispatch","_Fragment","GalleryWrapper","length","map","product","_objectSpread","CardPlaceholder","CreateButton","Modal","onClose","ProductForm","onSubmit","productData","createProduct","onCancel","ProductsPage","error","selectProductError","getAllProducts","Notify","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}