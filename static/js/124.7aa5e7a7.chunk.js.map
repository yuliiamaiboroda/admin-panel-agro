{"version":3,"file":"static/js/124.7aa5e7a7.chunk.js","mappings":"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","sources":["components/ModalLogout/ModalLogout.tsx","components/PageTitle/PageTitle.styled.ts","components/PageTitle/PageTitle.tsx","helpers/schemas/auth/updatePassword.schema.ts","components/ModalChangePassword/ModalChangePassword.tsx","pages/ProfilePage/ProfilePage.styled.ts","pages/ProfilePage/ProfilePage.tsx"],"sourcesContent":["import React from 'react';\nimport ConfirmationModal from 'components/ConfirmationModal';\n\ninterface IProps {\n  onClose: () => void;\n  handleLogout: () => void;\n}\n\nexport default function ModalLogout({ onClose, handleLogout }: IProps) {\n  return (\n    <ConfirmationModal\n      title={`Ви дійсно хочете вийти?`}\n      onCancel={onClose}\n      onConfirm={handleLogout}\n    />\n  );\n}\n","import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  height: 100px;\n  display: flex;\n  align-items: center;\n  padding: ${p => p.theme.space[6]}px ${p => p.theme.space[8]}px;\n  background: ${props => props.theme.colors.primaryGradient};\n  border-radius: ${props => props.theme.radii.pageTitle};\n\n  @media ${devices.tablet} {\n    height: 150px;\n  }\n\n  @media ${devices.desktop} {\n    height: 234px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.colors.accentText};\n  font-size: ${props => props.theme.fontSizes.xl};\n\n  @media ${devices.desktop} {\n    font-size: ${props => props.theme.fontSizes.xxl};\n  }\n`;\n","import { Title, TitleWrapper } from './PageTitle.styled';\nimport { useEffect } from 'react';\n\ninterface IProps {\n  title: string;\n}\n\nexport default function PageTitle({ title }: IProps) {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  return (\n    <TitleWrapper>\n      <Title>{title}</Title>\n    </TitleWrapper>\n  );\n}\n","import * as Yup from 'yup';\n\nconst updatePasswordSchema = Yup.object().shape({\n  oldPassword: Yup.string()\n    .required()\n    .min(7, 'Пароль занадто короткий - має містити мінімум 7 символів.')\n    .max(32, 'Пароль занадто довгий - має містити максимум 32 символи.')\n    .required(\"Це поле є обов'язковим\")\n    .matches(\n      /^\\d*(?=.*[a-z])(?=.*[A-Z])\\S+\\D*\\d*$/,\n      'Пароль має містити лише: великі літери латиницею, маленькі літери латиницею та цифри'\n    ),\n  newPassword: Yup.string()\n  .required(\"Це поле є обов'язковим\")\n  .min(7, 'Пароль занадто короткий - має містити мінімум 7 символів.')\n    .max(32, 'Пароль занадто довгий - має містити максимум 32 символи.')\n    .matches(\n      /^\\d*(?=.*[a-z])(?=.*[A-Z])\\S+\\D*\\d*$/,\n      'Пароль має містити лише: великі літери латиницею, маленькі літери латиницею та цифри'\n    ),\n  confirmPassword: Yup.string()\n  .required(\"Це поле є обов'язковим\")\n  .oneOf([Yup.ref('newPassword'), ''], 'Паролі мають співпадати!'),\n});\n\nexport default updatePasswordSchema;\n","import { useState } from 'react';\nimport { useAppDispatch } from 'hooks';\nimport { RxEyeClosed, RxEyeOpen } from 'react-icons/rx';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { updatePasswordById } from 'redux/users';\nimport updatePasswordSchema from 'helpers/schemas/auth/updatePassword.schema';\n\ninterface IProps {\n  onClose: () => void;\n}\n\nexport default function ModalChangePassword({ onClose }: IProps) {\n  const [isVisibleOldPassword, setIsVisibleOldPassword] = useState(false);\n  const [isVisibleNewPassword, setIsVisibleNewPassword] = useState(false);\n  const [isVisibleConfirmPassword, setIsVisibleConfirmPassword] =\n    useState(false);\n  const dispatch = useAppDispatch();\n\n  const initialState = {\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialState}\n      validationSchema={updatePasswordSchema}\n      onSubmit={(values, actions) => {\n        const { oldPassword, newPassword } = values;\n        dispatch(updatePasswordById({ oldPassword, newPassword }));\n        actions.resetForm();\n        onClose();\n      }}\n    >\n      <Form>\n        <label>\n          Старий пароль:\n          <Field\n            name=\"oldPassword\"\n            type={isVisibleOldPassword ? 'text' : 'password'}\n            id=\"oldPassword\"\n          />\n          <button\n            type=\"button\"\n            onClick={() => setIsVisibleOldPassword(!isVisibleOldPassword)}\n          >\n            {isVisibleOldPassword ? <RxEyeClosed /> : <RxEyeOpen />}\n          </button>\n          <ErrorMessage name=\"oldPassword\" />\n        </label>\n        <br />\n        <label>\n          Новий пароль:\n          <Field\n            name=\"newPassword\"\n            type={isVisibleNewPassword ? 'text' : 'password'}\n            id=\"newPassword\"\n          />\n          <button\n            type=\"button\"\n            onClick={() => setIsVisibleNewPassword(!isVisibleNewPassword)}\n          >\n            {isVisibleNewPassword ? <RxEyeClosed /> : <RxEyeOpen />}\n          </button>\n          <ErrorMessage name=\"newPassword\" />\n        </label>\n        <br />\n        <label>\n          Підтвердити новий пароль:\n          <Field\n            name=\"confirmPassword\"\n            type={isVisibleConfirmPassword ? 'text' : 'password'}\n            id=\"confirmPassword\"\n          />\n          <button\n            type=\"button\"\n            onClick={() =>\n              setIsVisibleConfirmPassword(!isVisibleConfirmPassword)\n            }\n          >\n            {isVisibleConfirmPassword ? <RxEyeClosed /> : <RxEyeOpen />}\n          </button>\n          <ErrorMessage name=\"confirmPassword\" />\n        </label>\n        <br />\n        <button type=\"button\" onClick={onClose}>\n          Назад\n        </button>\n        <button type=\"submit\">Змінити пароль</button>\n      </Form>\n    </Formik>\n  );\n}\n","import { devices } from 'helpers/constants';\nimport styled from 'styled-components';\n\nexport const CardCentred = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const CardWrapper = styled.div`\n  width: 300px;\n  margin-top: ${props => props.theme.space[3]}px;\n  padding: ${props => props.theme.space[3]}px ${props => props.theme.space[3]}px;\n  border-radius: ${props => props.theme.radii.card};\n  box-shadow: ${props => props.theme.shadows.card};\n  background-color: ${props => props.theme.colors.primaryBackground};\n\n  @media ${devices.tablet} {\n    width: 410px;\n    margin-top: -${props => props.theme.space[4]}px;\n    padding: ${props => props.theme.space[6]}px\n      ${props => props.theme.space[3]}px;\n  }\n\n  @media ${devices.desktop} {\n    margin-top: -${props => props.theme.space[7]}px;\n  }\n`;\n\nexport const Details = styled.p`\n  margin-bottom: ${props => props.theme.space[3]}px;\n  font-size: ${props => props.theme.fontSizes.m};\n`;\n","import { useAppSelector, useAppDispatch } from 'hooks';\nimport { logoutUser, selectUser } from 'redux/user';\nimport { AiOutlineLogout, AiOutlineSetting } from 'react-icons/ai';\nimport { useState } from 'react';\nimport { Roles } from 'helpers/constants';\nimport Modal from 'components/Modal/Modal';\nimport ModalLogout from 'components/ModalLogout/ModalLogout';\nimport translateRole from 'utils/translate-role';\nimport ModalChangePassword from 'components/ModalChangePassword';\nimport PageTitle from 'components/PageTitle';\nimport { Button } from 'helpers/styles';\nimport { CardWrapper, CardCentred, Details } from './ProfilePage.styled';\nimport Box from 'components/Box';\n\nexport default function ProfilePage() {\n  const [isLogoutModalOpen, setIsLogoutModalOpen] = useState(false);\n  const [isChangePassModalOpen, setIsChangePassModalOpen] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const {\n    user: { name, surname, role, email },\n  } = useAppSelector(selectUser);\n  return (\n    <>\n      <PageTitle title=\"Ваші особисті дані\" />\n      <CardCentred>\n        <CardWrapper>\n          <Details>\n            <b>Ім'я: </b>\n            {name} {surname}\n          </Details>\n          <Details>\n            <b>Роль: </b>\n            {role && translateRole(Roles[role])}\n          </Details>\n          <Details>\n            <b>Пошта: </b>\n            {email}\n          </Details>\n          <Box mt={4} display=\"flex\" justifyContent=\"center\" gridGap={2}>\n            <Button\n              type=\"button\"\n              onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n                setIsChangePassModalOpen(true)\n              }\n              variant=\"primary\"\n              width={[132, 188]}\n            >\n              <AiOutlineSetting size={24} />\n              <Box display={['none', 'block']}>Змінити пароль</Box>\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n                setIsLogoutModalOpen(true)\n              }\n              variant=\"secondary\"\n              width={[132, 188]}\n            >\n              <AiOutlineLogout size={24} />\n              <Box display={['none', 'block']}>Вихід з аккаунту</Box>\n            </Button>\n          </Box>\n        </CardWrapper>\n      </CardCentred>\n\n      {isChangePassModalOpen && (\n        <Modal onClose={() => setIsChangePassModalOpen(false)}>\n          <ModalChangePassword\n            onClose={() => setIsChangePassModalOpen(false)}\n          />\n        </Modal>\n      )}\n      {isLogoutModalOpen && (\n        <Modal onClose={() => setIsLogoutModalOpen(false)}>\n          <ModalLogout\n            onClose={() => setIsLogoutModalOpen(false)}\n            handleLogout={() => dispatch(logoutUser())}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"names":["ModalLogout","_ref","onClose","handleLogout","_jsx","ConfirmationModal","title","onCancel","onConfirm","TitleWrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","props","colors","primaryGradient","radii","pageTitle","devices","Title","_templateObject2","accentText","fontSizes","xl","xxl","PageTitle","useEffect","document","children","Yup","shape","oldPassword","required","min","max","matches","newPassword","confirmPassword","oneOf","ModalChangePassword","_useState","useState","_useState2","_slicedToArray","isVisibleOldPassword","setIsVisibleOldPassword","_useState3","_useState4","isVisibleNewPassword","setIsVisibleNewPassword","_useState5","_useState6","isVisibleConfirmPassword","setIsVisibleConfirmPassword","dispatch","useAppDispatch","Formik","initialValues","validationSchema","updatePasswordSchema","onSubmit","values","actions","updatePasswordById","resetForm","_jsxs","Form","Field","name","type","id","onClick","RxEyeClosed","RxEyeOpen","ErrorMessage","CardCentred","CardWrapper","card","shadows","primaryBackground","Details","_templateObject3","m","ProfilePage","isLogoutModalOpen","setIsLogoutModalOpen","isChangePassModalOpen","setIsChangePassModalOpen","_useAppSelector$user","useAppSelector","selectUser","user","surname","role","email","_Fragment","translateRole","Roles","Box","mt","display","justifyContent","gridGap","Button","e","variant","width","AiOutlineSetting","size","AiOutlineLogout","Modal","logoutUser"],"sourceRoot":""}