{"version":3,"file":"static/js/969.f2813361.chunk.js","mappings":"8KAOe,SAASA,EAAWC,GAAqC,IAAlCC,EAAOD,EAAPC,QAASC,EAAYF,EAAZE,aAC7C,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sJACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLC,QAAS,SAACC,GAAsC,OAAKN,GAAc,EAACE,SACrE,sCAIHC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLC,QAAS,SAACC,GAAsC,OAAKP,GAAS,EAACG,SAChE,kEAOX,C,qLCrBe,SAASK,IACtB,IAAAC,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAIJI,GAA1BC,EAAAA,EAAAA,IAAeC,EAAAA,IADjBC,KAAQC,EAAIJ,EAAJI,KAAMC,EAAOL,EAAPK,QAASC,EAAIN,EAAJM,KAAMC,EAAKP,EAALO,MAGzBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEtB,EAAAA,EAAAA,MAAA,UAAAC,SAAA,EACED,EAAAA,EAAAA,MAACuB,EAAAA,GAAO,CAACC,GAAG,WAAUvB,SAAA,EACpBD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGgB,EAAK,IAAEC,KAETC,IAAQjB,EAAAA,EAAAA,KAAA,OAAAD,UAAMwB,EAAAA,EAAAA,GAAcC,EAAAA,GAAMP,OAEnCjB,EAAAA,EAAAA,KAAA,KAAAD,SAAImB,QAGNpB,EAAAA,EAAAA,MAAA,UACEG,KAAK,SACLC,QAAS,SAACC,GAAsC,OAC9CO,GAAe,EAAK,EACrBX,SAAA,EAEDC,EAAAA,EAAAA,KAACyB,EAAAA,IAAe,IAAG,6FAEpBhB,IACCT,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CAAC9B,QAAS,kBAAMc,GAAe,EAAM,EAACX,UAC1CC,EAAAA,EAAAA,KAACN,EAAAA,EAAW,CACVE,QAAS,kBAAMc,GAAe,EAAM,EACpCb,aAAc,kBAAMsB,GAASQ,EAAAA,EAAAA,MAAa,QAMtD,C,sDCjCMC,EAA2B,CAC/B,CAAEC,KAAM,SAAUC,MAAO,qEAAeC,OAAQP,EAAAA,GAAAA,MAAaQ,KAAMC,EAAAA,KACnE,CACEJ,KAAM,YACNC,MAAO,oGACPC,OAAQG,EAAAA,GACRF,KAAMG,EAAAA,KAER,CACEN,KAAM,YACNC,MAAO,8FACPC,OAAQG,EAAAA,GACRF,KAAMI,EAAAA,KAER,CACEP,KAAM,aACNC,MAAO,mDACPC,OAAQG,EAAAA,GACRF,KAAMK,EAAAA,KAER,CACER,KAAM,WACNC,MAAO,uCACPC,OAAQP,EAAAA,GAAAA,aACRQ,KAAMM,EAAAA,KAER,CACET,KAAM,aACNC,MAAO,6CACPC,OAAQP,EAAAA,GAAAA,MACRQ,KAAMO,EAAAA,MAIK,SAASC,IACtB,OACExC,EAAAA,EAAAA,KAAA,MAAAD,SACG6B,EAAgBa,KAAI,SAAA9C,EAAsC+C,GAAW,IAA9Cb,EAAIlC,EAAJkC,KAAMC,EAAKnC,EAALmC,MAAOC,EAAMpC,EAANoC,OAAcY,EAAIhD,EAAVqC,KAC3C,OACEhC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAmB,CAAaC,YAAad,EAAOhC,UACnDC,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAACuB,EAAAA,GAAO,CAACC,GAAIO,EAAK9B,SAAA,EAChBC,EAAAA,EAAAA,KAAC2C,EAAI,IACJb,QAJmBY,EAS9B,KAGN,C,iDC/DMI,GAASC,EAAAA,EAAAA,WAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wEASXC,EAASC,EAAAA,QAAAA,OAAaC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mPAWpBH,GAGFO,GAAUF,EAAAA,EAAAA,SAAOG,EAAAA,IAAPH,CAA2BI,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oHCvBnC,SAASO,IACtB,IAAAnD,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDoD,EAAalD,EAAA,GAAEmD,EAAgBnD,EAAA,GAoBtC,OAdAoD,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAyB,WAC7BC,OAAOC,YAAc,IACjBJ,GAAiB,GACjBA,GAAiB,EACvB,EAIA,OAFAG,OAAOE,iBAAiB,SAAUH,GAE3B,WACLC,OAAOG,oBAAoB,SAAUJ,EACvC,CACF,GAAG,KAGD5D,EAAAA,EAAAA,KAAAiE,EAAAA,SAAA,CAAAlE,SACG0D,IACCzD,EAAAA,EAAAA,KAACkD,EAAM,CACLjD,KAAK,SACLC,QAAS,SAACC,GAtBhB0D,OAAOK,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAuBT,EACpBrE,UAEDC,EAAAA,EAAAA,KAACqD,EAAO,OAKlB,CC/Be,SAASgB,IACtB,OACEvE,EAAAA,EAAAA,MAAAmE,EAAAA,SAAA,CAAAlE,SAAA,EACEC,EAAAA,EAAAA,KAACI,EAAM,KACPJ,EAAAA,EAAAA,KAACwC,EAAU,KACXxC,EAAAA,EAAAA,KAACwD,EAAQ,KACTxD,EAAAA,EAAAA,KAACsE,EAAAA,SAAQ,CAACC,UAAUvE,EAAAA,EAAAA,KAACwE,EAAAA,EAAM,IAAIzE,UAC7BC,EAAAA,EAAAA,KAACyE,EAAAA,GAAM,QAIf,C","sources":["components/ModalLogout/ModalLogout.tsx","components/Header/Header.tsx","components/Navigation/Navigation.tsx","components/ButtonUp/ButtonUp.styled.ts","components/ButtonUp/ButtonUp.tsx","components/SharedLayout/SharedLayout.tsx"],"sourcesContent":["import React from 'react';\n\ninterface IProps {\n  onClose: () => void;\n  handleLogout: () => void;\n}\n\nexport default function ModalLogout({ onClose, handleLogout }: IProps) {\n  return (\n    <div>\n      <h2>Ви впевнені, що хочете вийти?</h2>\n      <ul>\n        <li>\n          <button\n            type=\"button\"\n            onClick={(e: React.MouseEvent<HTMLButtonElement>) => handleLogout()}\n          >\n            вихід\n          </button>\n        </li>\n        <li>\n          <button\n            type=\"button\"\n            onClick={(e: React.MouseEvent<HTMLButtonElement>) => onClose()}\n          >\n            скасувати\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import Modal from 'components/Modal/Modal';\nimport ModalLogout from 'components/ModalLogout/ModalLogout';\nimport translateRole from 'utils/translate-role';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { useState } from 'react';\nimport { AiOutlineLogout } from 'react-icons/ai';\nimport { logoutUser, selectUser } from 'redux/user';\nimport { Roles } from 'helpers/constants';\nimport { NavLink } from 'react-router-dom';\n\nexport default function Header() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const {\n    user: { name, surname, role, email },\n  } = useAppSelector(selectUser);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <header>\n      <NavLink to=\"/profile\">\n        <h2>\n          {name} {surname}\n        </h2>\n        {role && <div>{translateRole(Roles[role])}</div>}\n\n        <p>{email}</p>\n      </NavLink>\n\n      <button\n        type=\"button\"\n        onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n          setIsModalOpen(true)\n        }\n      >\n        <AiOutlineLogout /> Вийти з аккаунту\n      </button>\n      {isModalOpen && (\n        <Modal onClose={() => setIsModalOpen(false)}>\n          <ModalLogout\n            onClose={() => setIsModalOpen(false)}\n            handleLogout={() => dispatch(logoutUser())}\n          />\n        </Modal>\n      )}\n    </header>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport { HiUsers, HiOutlineTruck } from 'react-icons/hi';\nimport { MdProductionQuantityLimits, MdWork, MdFeedback } from 'react-icons/md';\nimport { GrUserWorker } from 'react-icons/gr';\nimport { IconType } from 'react-icons';\nimport { Roles, USER_ROLES } from 'helpers/constants';\nimport RestrictedComponent from 'components/RestrictedComponent';\n\ninterface ILink {\n  href: string;\n  title: string;\n  access: Roles | Roles[];\n  icon: IconType;\n}\n\nconst navigationLinks: ILink[] = [\n  { href: '/users', title: 'Користувачі', access: Roles.admin, icon: HiUsers },\n  {\n    href: '/products',\n    title: 'Продукти компанії',\n    access: USER_ROLES,\n    icon: MdProductionQuantityLimits,\n  },\n  {\n    href: '/services',\n    title: 'Послуги компанії',\n    access: USER_ROLES,\n    icon: HiOutlineTruck,\n  },\n  {\n    href: '/vacancies',\n    title: 'Вакансії',\n    access: USER_ROLES,\n    icon: MdWork,\n  },\n  {\n    href: '/resumes',\n    title: 'Резюме',\n    access: Roles.applyManager,\n    icon: GrUserWorker,\n  },\n  {\n    href: '/feedbacks',\n    title: 'Фідбеки',\n    access: Roles.admin,\n    icon: MdFeedback,\n  },\n];\n\nexport default function Navigation() {\n  return (\n    <ul>\n      {navigationLinks.map(({ href, title, access, icon: Icon }, index) => {\n        return (\n          <RestrictedComponent key={index} accessRight={access}>\n            <li>\n              <NavLink to={href}>\n                <Icon />\n                {title}\n              </NavLink>\n            </li>\n          </RestrictedComponent>\n        );\n      })}\n    </ul>\n  );\n}\n","import styled, { keyframes } from 'styled-components';\nimport { BsArrowUpCircleFill } from 'react-icons/bs';\n\nconst FadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const Button = styled.button`\n  position: fixed;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  z-index: 15;\n  right: 20px;\n  bottom: 20px;\n  padding: 0;\n  animation: ${FadeIn} 350ms ease-in-out;\n`;\n\nexport const ArrowUp = styled(BsArrowUpCircleFill)`\n  width: 40px;\n  height: 40px;\n  @media (min-width: 768px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Button, ArrowUp } from './ButtonUp.styled';\n\nexport default function ButtonUp() {\n  const [isShownButton, setIsShownButton] = useState(false);\n\n  const handleScrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    const handleScrollVisibility = () => {\n      window.pageYOffset > 300\n        ? setIsShownButton(true)\n        : setIsShownButton(false);\n    };\n\n    window.addEventListener('scroll', handleScrollVisibility);\n\n    return () => {\n      window.removeEventListener('scroll', handleScrollVisibility);\n    };\n  }, []);\n\n  return (\n    <>\n      {isShownButton && (\n        <Button\n          type=\"button\"\n          onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\n            handleScrollToTop()\n          }\n        >\n          <ArrowUp />\n        </Button>\n      )}\n    </>\n  );\n}\n","import Header from 'components/Header';\nimport Loader from 'components/Loader/Loader';\nimport Navigation from 'components/Navigation';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport ButtonUp from 'components/ButtonUp';\n\nexport default function SharedLayout() {\n  return (\n    <>\n      <Header />\n      <Navigation />\n      <ButtonUp />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["ModalLogout","_ref","onClose","handleLogout","_jsxs","children","_jsx","type","onClick","e","Header","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","_useAppSelector$user","useAppSelector","selectUser","user","name","surname","role","email","dispatch","useAppDispatch","NavLink","to","translateRole","Roles","AiOutlineLogout","Modal","logoutUser","navigationLinks","href","title","access","icon","HiUsers","USER_ROLES","MdProductionQuantityLimits","HiOutlineTruck","MdWork","GrUserWorker","MdFeedback","Navigation","map","index","Icon","RestrictedComponent","accessRight","FadeIn","keyframes","_templateObject","_taggedTemplateLiteral","Button","styled","_templateObject2","ArrowUp","BsArrowUpCircleFill","_templateObject3","ButtonUp","isShownButton","setIsShownButton","useEffect","handleScrollVisibility","window","pageYOffset","addEventListener","removeEventListener","_Fragment","scrollTo","top","behavior","SharedLayout","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}